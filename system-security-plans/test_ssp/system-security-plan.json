{
  "system-security-plan": {
    "uuid": "c8a7000d-d93e-414a-b4d1-001a91e28a34",
    "metadata": {
      "title": "REPLACE_ME",
      "last-modified": "2024-09-05T22:54:33.148650+00:00",
      "version": "1.0.0",
      "oscal-version": "1.0.4"
    },
    "import-profile": {
      "href": "trestle://profiles/example/profile.json"
    },
    "system-characteristics": {
      "system-ids": [
        {
          "id": "REPLACE_ME"
        }
      ],
      "system-name": "REPLACE_ME",
      "description": "REPLACE_ME",
      "security-sensitivity-level": "REPLACE_ME",
      "system-information": {
        "information-types": [
          {
            "title": "REPLACE_ME",
            "description": "REPLACE_ME",
            "confidentiality-impact": {
              "base": "REPLACE_ME"
            },
            "integrity-impact": {
              "base": "REPLACE_ME"
            },
            "availability-impact": {
              "base": "REPLACE_ME"
            }
          }
        ]
      },
      "security-impact-level": {
        "security-objective-confidentiality": "REPLACE_ME",
        "security-objective-integrity": "REPLACE_ME",
        "security-objective-availability": "REPLACE_ME"
      },
      "status": {
        "state": "operational"
      },
      "authorization-boundary": {
        "description": "REPLACE_ME"
      }
    },
    "system-implementation": {
      "users": [
        {
          "uuid": "f9658efc-2ffb-42c4-ae15-de85b77a5c25"
        }
      ],
      "components": [
        {
          "uuid": "a6ce96d1-fa18-47cf-b2af-56c2a14bc71e",
          "type": "service",
          "title": "My Comp",
          "description": "My testing comp",
          "props": [
            {
              "name": "Rule_Id",
              "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal",
              "value": "rule-ac-2.2",
              "remarks": "rule_set_0"
            },
            {
              "name": "Rule_Description",
              "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal",
              "value": "Rule for ac-2.2",
              "remarks": "rule_set_0"
            },
            {
              "name": "Parameter_Id",
              "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal",
              "value": "prm_1",
              "remarks": "rule_set_0"
            },
            {
              "name": "Parameter_Description",
              "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal",
              "value": "prm_1 description",
              "remarks": "rule_set_0"
            },
            {
              "name": "Parameter_Value_Alternatives",
              "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal",
              "value": "{\"default\": \"20%\", \"5pc\": \"5%\", \"10pc\": \"10%\", \"15pc\": \"15%\", \"20pc\": \"20%\"}",
              "remarks": "rule_set_0"
            },
            {
              "name": "Rule_Id",
              "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal",
              "value": "rule-sc-1",
              "remarks": "rule_set_1"
            },
            {
              "name": "Rule_Description",
              "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal",
              "value": "Rule for sc-1",
              "remarks": "rule_set_1"
            },
            {
              "name": "Rule_Id",
              "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal",
              "value": "rule-ac-4.4",
              "remarks": "rule_set_2"
            },
            {
              "name": "Rule_Description",
              "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal",
              "value": "Rule for ac-4.4 extra again",
              "remarks": "rule_set_2"
            },
            {
              "name": "Rule_Id",
              "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal",
              "value": "rule-ac-1",
              "remarks": "rule_set_3"
            },
            {
              "name": "Rule_Description",
              "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal",
              "value": "Rule for ac-1",
              "remarks": "rule_set_3"
            },
            {
              "name": "Parameter_Id",
              "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal",
              "value": "prm_1",
              "remarks": "rule_set_3"
            },
            {
              "name": "Parameter_Description",
              "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal",
              "value": "prm_1 description",
              "remarks": "rule_set_3"
            },
            {
              "name": "Parameter_Value_Alternatives",
              "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal",
              "value": "{\"default\": \"20%\", \"5pc\": \"5%\", \"10pc\": \"10%\", \"15pc\": \"15%\", \"20pc\": \"20%\"}",
              "remarks": "rule_set_3"
            }
          ],
          "status": {
            "state": "operational"
          }
        },
        {
          "uuid": "0be00eaa-b4a5-4193-b4eb-9423e06eae1f",
          "type": "service",
          "title": "ocp4",
          "description": "ocp4",
          "props": [
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "idp_is_configured",
              "remarks": "rule_set_000"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "For users to interact with OpenShift Container Platform, they must first authenticate to the cluster. The authentication layer identifies the user associated with requests to the OpenShift Container Platform API. The authorization layer then uses information about the requesting user to determine if the request is allowed. Understanding authentication | Authentication | OpenShift Container Platform The OpenShift Container Platform includes a built-in OAuth server for token-based authentication. Developers and administrators obtain OAuth access tokens to authenticate themselves to the API. It is recommended for an administrator to configure OAuth to specify an identity provider after the cluster is installed. User access to the cluster is managed through the identity provider. Understanding identity provider configuration | Authentication | OpenShift Container Platform OpenShift includes built-in role based access control (RBAC) to determine whether a user is allowed to perform a given action within the cluster. Roles can have cluster scope or local (i.e. project) scope. Using RBAC to define and apply permissions | Authentication | OpenShift Container Platform",
              "remarks": "rule_set_000"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "ocp_idp_no_htpasswd",
              "remarks": "rule_set_001"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "For users to interact with OpenShift Container Platform, they must first authenticate to the cluster. The authentication layer identifies the user associated with requests to the OpenShift Container Platform API. The authorization layer then uses information about the requesting user to determine if the request is allowed. Understanding authentication | Authentication | OpenShift Container Platform The OpenShift Container Platform includes a built-in OAuth server for token-based authentication. Developers and administrators obtain OAuth access tokens to authenticate themselves to the API. It is recommended for an administrator to configure OAuth to specify an identity provider after the cluster is installed. User access to the cluster is managed through the identity provider. Understanding identity provider configuration | Authentication | OpenShift Container Platform However, not all Identity Providers supported by OpenShift provide the same level of capabilities. As an example, the htpasswd Identity Provider only checks the username and password match and provides no means of 2FA, account lockout or notification mechanism. This rule therefore only allows a subset of identity providers.",
              "remarks": "rule_set_001"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubeadmin_removed",
              "remarks": "rule_set_002"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The kubeadmin user is meant to be a temporary user used for bootstrapping purposes. It is preferable to assign system administrators whose users are backed by an Identity Provider. Make sure to remove the user as described in the documentation",
              "remarks": "rule_set_002"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "oauth_or_oauthclient_inactivity_timeout",
              "remarks": "rule_set_003"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "You can configure OAuth tokens to expire after a set period of inactivity. By default, no token inactivity timeout is set. The inactivity timeout can be either set in the OAuth server configuration or in any of the OAuth clients. The client settings override the OAuth server setting. To set the OAuth server inactivity timeout, edit the OAuth server object: oc edit oauth cluster and set the .spec.tokenConfig.accessTokenInactivityTimeout parameter to the desired value: apiVersion: config.openshift.io/v1 kind: OAuth metadata: ... spec: tokenConfig: accessTokenInactivityTimeout: 10m0s Please note that the OAuth server converts the value internally to a human-readable format, so that e.g. setting accessTokenInactivityTimeout=600s would be converted by the OAuth server to accessTokenInactivityTimeout=10m0s. For more information on configuring the OAuth server, consult the OpenShift documentation: https://docs.openshift.com/container-platform/4.7/authentication/configuring-oauth-clients.html To edit the OAuth client inactivity timeout, edit the OAuth client object: oc edit oauthclient $clientname and set the top-level accessTokenInactivityTimeoutSeconds attribute. apiVersion: oauth.openshift.io/v1 grantMethod: auto kind: OAuthClient metadata: ... accessTokenInactivityTimeoutSeconds: 600 For more information on configuring the OAuth clients, consult the OpenShift documentation: https://access.redhat.com/documentation/en-us/openshift_container_platform/4.7/html-single/authentication_and_authorization/index#oauth-token-inactivity-timeout_configuring-internal-oauth",
              "remarks": "rule_set_003"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "audit_log_forwarding_enabled",
              "remarks": "rule_set_004"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "OpenShift audit works at the API server level, logging all requests coming to the server. Audit is on by default and the best practice is to ship audit logs off the cluster for retention. The cluster-logging-operator is able to do this with the ClusterLogForwarders resource. The forementioned resource can be configured to logs to different third party systems. For more information on this, please reference the official documentation: https://docs.openshift.com/container-platform/4.6/logging/cluster-logging-external.html",
              "remarks": "rule_set_004"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "configure_network_policies_namespaces",
              "remarks": "rule_set_005"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Use network policies to isolate traffic in your cluster network.",
              "remarks": "rule_set_005"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "routes_protected_by_tls",
              "remarks": "rule_set_006"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "OpenShift Container Platform provides methods for communicating from outside the cluster with services running in the cluster. TLS must be used to protect these communications. OpenShift Routes provide the ability to configure the needed TLS settings. With these, one is able to configure that any request coming from the outside must use TLS. To verify this, ensure that every Route in the system has a policy of Disable or Redirect to ensure a secure endpoint is used. The aforementioned policy will be set in a Routes .spec.tls.insecureEdgeTerminationPolicy setting.",
              "remarks": "rule_set_006"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "directory_permissions_var_log_oauth_audit",
              "remarks": "rule_set_007"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /var/log/oauth-apiserver/, run the command: $ sudo chmod 0700 /var/log/oauth-apiserver/",
              "remarks": "rule_set_007"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_ownership_var_log_oauth_audit",
              "remarks": "rule_set_008"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "All audit logs must be owned by root user and group. By default, the path for the OAuth audit log is /var/log/oauth-apiserver/. To properly set the owner of /var/log/oauth-apiserver, run the command: $ sudo chown root /var/log/oauth-apiserver To properly set the owner of /var/log/oauth-apiserver/*, run the command: $ sudo chown root /var/log/oauth-apiserver/*",
              "remarks": "rule_set_008"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_ownership_var_log_kube_audit",
              "remarks": "rule_set_009"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "All audit logs must be owned by root user and group. By default, the path for the Kubernetes audit log is /var/log/kube-apiserver/. To properly set the owner of /var/log/kube-apiserver, run the command: $ sudo chown root /var/log/kube-apiserver To properly set the owner of /var/log/kube-apiserver/*, run the command: $ sudo chown root /var/log/kube-apiserver/*",
              "remarks": "rule_set_009"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_var_log_ocp_audit",
              "remarks": "rule_set_010"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /var/log/openshift-apiserver/.*, run the command: $ sudo chmod 0600 /var/log/openshift-apiserver/.*",
              "remarks": "rule_set_010"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "directory_permissions_var_log_kube_audit",
              "remarks": "rule_set_011"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /var/log/kube-apiserver/, run the command: $ sudo chmod 0700 /var/log/kube-apiserver/",
              "remarks": "rule_set_011"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_var_log_kube_audit",
              "remarks": "rule_set_012"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /var/log/kube-apiserver/.*, run the command: $ sudo chmod 0600 /var/log/kube-apiserver/.*",
              "remarks": "rule_set_012"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_var_log_oauth_audit",
              "remarks": "rule_set_013"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /var/log/oauth-apiserver/.*, run the command: $ sudo chmod 0600 /var/log/oauth-apiserver/.*",
              "remarks": "rule_set_013"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_ownership_var_log_ocp_audit",
              "remarks": "rule_set_014"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "All audit logs must be owned by root user and group. By default, the path for the OpenShift audit log is /var/log/openshift-apiserver/. To properly set the owner of /var/log/openshift-apiserver, run the command: $ sudo chown root /var/log/openshift-apiserver To properly set the owner of /var/log/openshift-apiserver/*, run the command: $ sudo chown root /var/log/openshift-apiserver/*",
              "remarks": "rule_set_014"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "directory_permissions_var_log_ocp_audit",
              "remarks": "rule_set_015"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /var/log/openshift-apiserver/, run the command: $ sudo chmod 0700 /var/log/openshift-apiserver/",
              "remarks": "rule_set_015"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "directory_access_var_log_kube_audit",
              "remarks": "rule_set_016"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The audit system should collect access events to read the Kubernetes audit log directory. The following audit rule will assure that access to audit log directory are collected. -a always,exit -F dir=/var/log/kube-apiserver/ -F perm=r -F auid>=1000 -F auid!=unset -F key=access-audit-trail If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the rule to a file with suffix .rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the rule to /etc/audit/audit.rules file.",
              "remarks": "rule_set_016"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "directory_access_var_log_oauth_audit",
              "remarks": "rule_set_017"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The audit system should collect access events to read the OAuth audit log directory. The following audit rule will assure that access to audit log directory are collected. -a always,exit -F dir=/var/log/oauth-apiserver/ -F perm=r -F auid>=1000 -F auid!=unset -F key=access-audit-trail If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the rule to a file with suffix .rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the rule to /etc/audit/audit.rules file.",
              "remarks": "rule_set_017"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "directory_access_var_log_ocp_audit",
              "remarks": "rule_set_018"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The audit system should collect access events to read the OpenShift audit log directory. The following audit rule will assure that access to audit log directory are collected. -a always,exit -F dir=/var/log/openshift-apiserver/ -F perm=r -F auid>=1000 -F auid!=unset -F key=access-audit-trail If the auditd daemon is configured to use the augenrules program to read audit rules during daemon startup (the default), add the rule to a file with suffix .rules in the directory /etc/audit/rules.d. If the auditd daemon is configured to use the auditctl utility to read audit rules during daemon startup, add the rule to /etc/audit/audit.rules file.",
              "remarks": "rule_set_018"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "openshift_motd_exists",
              "remarks": "rule_set_019"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To configure OpenShift's MOTD, create a ConfigMap called motd in the openshift namespace. The object should look as follows: --- apiVersion: v1 kind: ConfigMap metadata: name: motd namespace: openshift data: message: \"A relevant MOTD\" Where message is a mandatory key. The DoD required text is either: You are accessing a U.S. Government (USG) Information System (IS) that is provided for USG-authorized use only. By using this IS (which includes any device attached to this IS), you consent to the following conditions: -The USG routinely intercepts and monitors communications on this IS for purposes including, but not limited to, penetration testing, COMSEC monitoring, network operations and defense, personnel misconduct (PM), law enforcement (LE), and counterintelligence (CI) investigations. -At any time, the USG may inspect and seize data stored on this IS. -Communications using, or data stored on, this IS are not private, are subject to routine monitoring, interception, and search, and may be disclosed or used for any USG-authorized purpose. -This IS includes security measures (e.g., authentication and access controls) to protect USG interests -- not for your personal benefit or privacy. -Notwithstanding the above, using this IS does not constitute consent to PM, LE or CI investigative searching or monitoring of the content of privileged communications, or work product, related to personal representation or services by attorneys, psychotherapists, or clergy, and their assistants. Such communications and work product are private and confidential. See User Agreement for details. OR: I've read & consent to terms in IS user agreement.",
              "remarks": "rule_set_019"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "banner_or_login_template_set",
              "remarks": "rule_set_020"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "A legal notice must be configured. This is achievable via the OAuth object by creating a custom login page, storing it in a Kubernetes Secret and referencing it in the appropriate field as described in the documentation Another way of achieving this is via a custom classification banner which is possible to set via the ConsoleNotification CRD as described in the documentation",
              "remarks": "rule_set_020"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "oauth_or_oauthclient_token_maxage",
              "remarks": "rule_set_021"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "You can configure OAuth tokens to have have a custom duration. By default, the tokens are valid for 24 hours (86400 seconds). The maximum age can be either set in the OAuth server configuration or in any of the OAuth clients. The client settings override the OAuth server setting. To set the OAuth server token max age, edit the OAuth server object: oc edit oauth cluster and set the .spec.tokenConfig.accessTokenMaxAgeSeconds parameter to the desired value: apiVersion: config.openshift.io/v1 kind: OAuth metadata: ... spec: tokenConfig: accessTokenMaxAgeSeconds: 28800 To set the OAuth client token max age, edit the OAuth client object: oc edit oauthclient $clientname and set the top-level accessTokenMaxAgeSeconds attribute. apiVersion: oauth.openshift.io/v1 grantMethod: auto kind: OAuthClient metadata: ... accessTokenMaxAgeSeconds: 28800 For more information on configuring the OAuth server, consult the OpenShift documentation: https://docs.openshift.com/container-platform/4.7/authentication/configuring-internal-oauth.html",
              "remarks": "rule_set_021"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "fips_mode_enabled_on_all_nodes",
              "remarks": "rule_set_022"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "OpenShift has an installation-time flag that can enable FIPS mode for the cluster. The flag fips: true must be enabled at install time in the install-config.yaml file.",
              "remarks": "rule_set_022"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "audit_profile_set",
              "remarks": "rule_set_023"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "OpenShift can audit the details of requests made to the API server through the standard Kubernetes audit capabilities. In OpenShift, auditing of the API Server is on by default. Audit provides a security-relevant chronological set of records documenting the sequence of activities that have affected system by individual users, administrators, or other components of the system. Audit works at the API server level, logging all requests coming to the server. Each audit log contains two entries: The request line containing: A Unique ID allowing to match the response line (see #2) The source IP of the request The HTTP method being invoked The original user invoking the operation The impersonated user for the operation (self meaning himself) The impersonated group for the operation (lookup meaning user's group) The namespace of the request or none The URI as requested The response line containing: The aforementioned unique ID The response code For more information on how to configure the audit profile, please visit the documentation",
              "remarks": "rule_set_023"
            },
            {
              "name": "Parameter_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "var_openshift_audit_profile",
              "remarks": "rule_set_023"
            },
            {
              "name": "Parameter_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Audit log profiles define how to log requests that come to the OpenShift API server, the Kubernetes API server, and the OAuth API server.",
              "remarks": "rule_set_023"
            },
            {
              "name": "Parameter_Value_Alternatives",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "{'default': 'Default', 'Default': 'Default', 'WriteRequestBodies': 'WriteRequestBodies', 'AllRequestBodies': 'AllRequestBodies'}",
              "remarks": "rule_set_023"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "partition_for_var_log_kube_apiserver",
              "remarks": "rule_set_024"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Kubernetes API server audit logs are stored in the /var/log/kube-apiserver directory. Partitioning Red Hat CoreOS is a Day 1 operation and cannot be changed afterwards. For documentation on how to add a MachineConfig manifest that specifies a separate /var/log/kube-apiserver partition, follow: https://docs.openshift.com/container-platform/latest/installing/installing_platform_agnostic/installing-platform-agnostic.html#installation-user-infra-machines-advanced_disk_installing-platform-agnostic Note that the Red Hat OpenShift documentation often references a block device, such as /dev/vda. The name of the available block devices depends on the underlying infrastructure (bare metal vs cloud), and often the specific instance type. For example in AWS, some instance types have NVMe drives (/dev/nvme*), others use /dev/xvda*. You will need to look for relevant documentation for your infrastructure around this. In many cases, the simplest thing is to boot a single machine with an Ignition configuration that just gives you SSH access, and inspect the block devices via e.g. the lsblk command. For physical hardware, a good best practice is to reference devices via the /dev/disk/by-id/ or /dev/disk/by-path links.",
              "remarks": "rule_set_024"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "partition_for_var_log_openshift_apiserver",
              "remarks": "rule_set_025"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Openshift API server audit logs are stored in the /var/log/openshift-apiserver directory. Partitioning Red Hat CoreOS is a Day 1 operation and cannot be changed afterwards. For documentation on how to add a MachineConfig manifest that specifies a separate /var/log/openshift-apiserver partition, follow: https://docs.openshift.com/container-platform/latest/installing/installing_platform_agnostic/installing-platform-agnostic.html#installation-user-infra-machines-advanced_disk_installing-platform-agnostic Note that the Red Hat OpenShift documentation often references a block device, such as /dev/vda. The name of the available block devices depends on the underlying infrastructure (bare metal vs cloud), and often the specific instance type. For example in AWS, some instance types have NVMe drives (/dev/nvme*), others use /dev/xvda*. You will need to look for relevant documentation for your infrastructure around this. In many cases, the simplest thing is to boot a single machine with an Ignition configuration that just gives you SSH access, and inspect the block devices via e.g. the lsblk command. For physical hardware, a good best practice is to reference devices via the /dev/disk/by-id/ or /dev/disk/by-path links.",
              "remarks": "rule_set_025"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "partition_for_var_log_oauth_apiserver",
              "remarks": "rule_set_026"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "OpenShift OAuth server audit logs are stored in the /var/log/oauth-apiserver directory. Partitioning Red Hat CoreOS is a Day 1 operation and cannot be changed afterwards. For documentation on how to add a MachineConfig manifest that specifies a separate /var/log/oauth-apiserver partition, follow: https://docs.openshift.com/container-platform/latest/installing/installing_platform_agnostic/installing-platform-agnostic.html#installation-user-infra-machines-advanced_disk_installing-platform-agnostic Note that the Red Hat OpenShift documentation often references a block device, such as /dev/vda. The name of the available block devices depends on the underlying infrastructure (bare metal vs cloud), and often the specific instance type. For example in AWS, some instance types have NVMe drives (/dev/nvme*), others use /dev/xvda*. You will need to look for relevant documentation for your infrastructure around this. In many cases, the simplest thing is to boot a single machine with an Ignition configuration that just gives you SSH access, and inspect the block devices via e.g. the lsblk command. For physical hardware, a good best practice is to reference devices via the /dev/disk/by-id/ or /dev/disk/by-path links.",
              "remarks": "rule_set_026"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "audit_error_alert_exists",
              "remarks": "rule_set_027"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "OpenShift audit works at the API server level, logging all requests coming to the server. However, if API server instance is unable to write errors, an alert must be issued in order for the organization to take a relevant action. e.g. shutting down that instance. Kubernetes by default has metrics that enable one to write such alerts: apiserver_audit_event_total apiserver_audit_error_total Such an example is shipped in OCP 4.9+ apiVersion: monitoring.coreos.com/v1 kind: PrometheusRule metadata: name: audit-errors namespace: openshift-kube-apiserver spec: groups: - name: apiserver-audit rules: - alert: AuditLogError annotations: summary: |- An API Server instance was unable to write audit logs. This could be triggered by the node running out of space, or a malicious actor tampering with the audit logs. description: An API Server had an error writing to an audit log. expr: | sum by (apiserver,instance)(rate(apiserver_audit_error_total{apiserver=~\".+-apiserver\"}[5m])) / sum by (apiserver,instance) (rate(apiserver_audit_event_total{apiserver=~\".+-apiserver\"}[5m])) > 0 for: 1m labels: severity: warning For more information, consult the official Kubernetes documentation.",
              "remarks": "rule_set_027"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "alert_receiver_configured",
              "remarks": "rule_set_028"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "In OpenShift Container Platform, an alert is fired when the conditions defined in an alerting rule are true. An alert provides a notification that a set of circumstances are apparent within a cluster. Firing alerts can be viewed in the Alerting UI in the OpenShift Container Platform web console by default. After an installation, you can configure OpenShift Container Platform to send alert notifications to external systems so that designate personnel can be alerted in real time. OpenShift provides multiple alert receivers integrations to send realtime alerts to different services such as email, slack, pagerduty, webhooks, etc. [1][2] [1]https://docs.openshift.com/container-platform/latest/post_installation_configuration/configuring-alert-notifications.html#configuring-alert-receivers_configuring-alert-notifications [2]https://docs.openshift.com/container-platform/latest/monitoring/managing-alerts.html#applying-custom-alertmanager-configuration_managing-alerts",
              "remarks": "rule_set_028"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "audit_log_forwarding_uses_tls",
              "remarks": "rule_set_029"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "OpenShift audit works at the API server level, logging all requests coming to the server. Audit is on by default and the best practice is to ship audit logs off the cluster for retention using a secure protocol. The cluster-logging-operator is able to do this with the ClusterLogForwarders resource. The forementioned resource can be configured to logs to different third party systems. For more information on this, please reference the official documentation: https://docs.openshift.com/container-platform/latest/logging/cluster-logging-external.html",
              "remarks": "rule_set_029"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "gitops_operator_exists",
              "remarks": "rule_set_030"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on Argo CD. It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.",
              "remarks": "rule_set_030"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_perms_openshift_sdn_cniserver_config",
              "remarks": "rule_set_031"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /var/run/openshift-sdn/cniserver/config.json, run the command: $ sudo chmod 0444 /var/run/openshift-sdn/cniserver/config.json",
              "remarks": "rule_set_031"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_openshift_sdn_cniserver_config",
              "remarks": "rule_set_032"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /var/run/openshift-sdn/cniserver/config.json, run the command: $ sudo chown root /var/run/openshift-sdn/cniserver/config.json",
              "remarks": "rule_set_032"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_admission_control_plugin_namespacelifecycle",
              "remarks": "rule_set_033"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "OpenShift enables the NamespaceLifecycle plugin by default.",
              "remarks": "rule_set_033"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_request_timeout",
              "remarks": "rule_set_034"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The API server minimum request timeout defines the minimum number of seconds a handler must keep a request open before timing it out. To set this, edit the openshift-kube-apiserver configmap and set min-request-timeout under the apiServerArguments field: \"apiServerArguments\":{ ... \"min-request-timeout\":[ ], ...",
              "remarks": "rule_set_034"
            },
            {
              "name": "Parameter_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "var_api_min_request_timeout",
              "remarks": "rule_set_034"
            },
            {
              "name": "Parameter_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Enter API Server Request Timeout",
              "remarks": "rule_set_034"
            },
            {
              "name": "Parameter_Value_Alternatives",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "{300: '300', 'default': '3600'}",
              "remarks": "rule_set_034"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_openshift_pki_key_files",
              "remarks": "rule_set_035"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /etc/kubernetes/static-pod-resources/*/*/*/*.key, run the command: $ sudo chmod 0600 /etc/kubernetes/static-pod-resources/*/*/*/*.key",
              "remarks": "rule_set_035"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_cni_conf",
              "remarks": "rule_set_036"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /etc/cni/net.d/*, run the command: $ sudo chown root /etc/cni/net.d/*",
              "remarks": "rule_set_036"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "ocp_api_server_audit_log_maxsize",
              "remarks": "rule_set_037"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To rotate audit logs upon reaching a maximum size, edit the openshift-apiserver configmap and set the audit-log-maxsize parameter to an appropriate size in MB. For example, to set it to 100 MB: \"apiServerArguments\":{ ... \"audit-log-maxsize\": [\"100\"], ...",
              "remarks": "rule_set_037"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_master_admin_kubeconfigs",
              "remarks": "rule_set_038"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/node-kubeconfigs/*.kubeconfig, run the command: $ sudo chown root /etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/node-kubeconfigs/*.kubeconfig",
              "remarks": "rule_set_038"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_ovsdb_server_pid",
              "remarks": "rule_set_039"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /run/openvswitch/ovsdb-server.pid, run the command: $ sudo chmod 0644 /run/openvswitch/ovsdb-server.pid",
              "remarks": "rule_set_039"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_kube_scheduler",
              "remarks": "rule_set_040"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /etc/kubernetes/static-pod-resources/kube-scheduler-pod-*/kube-scheduler-pod.yaml, run the command: $ sudo chgrp root /etc/kubernetes/static-pod-resources/kube-scheduler-pod-*/kube-scheduler-pod.yaml",
              "remarks": "rule_set_040"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_etcd_member",
              "remarks": "rule_set_041"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /etc/kubernetes/manifests/etcd-pod.yaml, run the command: $ sudo chgrp root /etc/kubernetes/manifests/etcd-pod.yaml",
              "remarks": "rule_set_041"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_openshift_pki_cert_files",
              "remarks": "rule_set_042"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /etc/kubernetes/static-pod-resources/kube-*/secrets/*/tls.crt, run the command: $ sudo chmod 0600 /etc/kubernetes/static-pod-resources/kube-*/secrets/*/tls.crt",
              "remarks": "rule_set_042"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_enable_server_cert_rotation",
              "remarks": "rule_set_043"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To enable the kubelet to rotate server certificates, edit the kubelet configuration file /etc/kubernetes/kubelet.conf on the kubelet node(s) and set the below parameter: serverTLSBootstrap: true",
              "remarks": "rule_set_043"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_ovs_conf_db_lock",
              "remarks": "rule_set_044"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /etc/openvswitch/.conf.db.~lock~, run the command: $ sudo chmod 0600 /etc/openvswitch/.conf.db.~lock~",
              "remarks": "rule_set_044"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "rbac_limit_secrets_access",
              "remarks": "rule_set_045"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The Kubernetes API stores secrets, which may be service account tokens for the Kubernetes API or credentials used by workloads in the cluster. Access to these secrets should be restricted to the smallest possible group of users to reduce the risk of privilege escalation. To restrict users from secrets, remove get, list, and watch access to unauthorized users to secret objects in the cluster.",
              "remarks": "rule_set_045"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_worker_service",
              "remarks": "rule_set_046"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /etc/systemd/system/kubelet.service, run the command: $ sudo chmod 0644 /etc/systemd/system/kubelet.service",
              "remarks": "rule_set_046"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_bind_address",
              "remarks": "rule_set_047"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The bindAddress is set by default to 0.0.0.0:6443, and listening with TLS enabled.",
              "remarks": "rule_set_047"
            },
            {
              "name": "Parameter_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "var_apiserver_bind_address",
              "remarks": "rule_set_047"
            },
            {
              "name": "Parameter_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Bind Address of secure API endpoint",
              "remarks": "rule_set_047"
            },
            {
              "name": "Parameter_Value_Alternatives",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "{'default': '0.0.0.0:6443'}",
              "remarks": "rule_set_047"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_audit_log_path",
              "remarks": "rule_set_048"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To enable auditing on the Kubernetes API Server, the audit log path must be set. Edit the openshift-kube-apiserver configmap and set the audit-log-path to a suitable path and file where audit logs should be written. For example: \"apiServerArguments\":{ ... \"audit-log-path\":\"/var/log/kube-apiserver/audit.log\", ...",
              "remarks": "rule_set_048"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_kubelet_conf",
              "remarks": "rule_set_049"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /etc/kubernetes/kubelet.conf, run the command: $ sudo chmod 0644 /etc/kubernetes/kubelet.conf",
              "remarks": "rule_set_049"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_kubelet",
              "remarks": "rule_set_050"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /var/lib/kubelet/config.json, run the command: $ sudo chmod 0600 /var/lib/kubelet/config.json",
              "remarks": "rule_set_050"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_https_for_kubelet_conn",
              "remarks": "rule_set_051"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The kube-apiserver ensures https to the kubelet by default. The apiserver flag \"--kubelet-https\" is deprecated and should be either set to \"true\" or omitted from the argument list.",
              "remarks": "rule_set_051"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_ovs_vswitchd_pid",
              "remarks": "rule_set_052"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /run/openvswitch/ovs-vswitchd.pid, run the command: $ sudo chown openvswitch /run/openvswitch/ovs-vswitchd.pid",
              "remarks": "rule_set_052"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_audit_log_maxbackup",
              "remarks": "rule_set_053"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To configure how many rotations of audit logs are retained, edit the openshift-kube-apiserver configmap and set the audit-log-maxbackup parameter to 10 or to an organizationally appropriate value: \"apiServerArguments\":{ ... \"audit-log-maxbackup\": [10], ...",
              "remarks": "rule_set_053"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_ovs_conf_db_lock",
              "remarks": "rule_set_054"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /etc/openvswitch/.conf.db.~lock~, run the command: $ sudo chown openvswitch /etc/openvswitch/.conf.db.~lock~",
              "remarks": "rule_set_054"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_scheduler_kubeconfig",
              "remarks": "rule_set_055"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /etc/kubernetes/static-pod-resources/kube-scheduler-pod-*/configmaps/scheduler-kubeconfig/kubeconfig, run the command: $ sudo chown root /etc/kubernetes/static-pod-resources/kube-scheduler-pod-*/configmaps/scheduler-kubeconfig/kubeconfig",
              "remarks": "rule_set_055"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_multus_conf",
              "remarks": "rule_set_056"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /var/run/multus/cni/net.d/*, run the command: $ sudo chmod 0644 /var/run/multus/cni/net.d/*",
              "remarks": "rule_set_056"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "ocp_api_server_audit_log_maxbackup",
              "remarks": "rule_set_057"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To configure how many rotations of audit logs are retained, edit the openshift-apiserver configmap and set the audit-log-maxbackup parameter to 10 or to an organizationally appropriate value: \"apiServerArguments\":{ ... \"audit-log-maxbackup\": [10], ...",
              "remarks": "rule_set_057"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "etcd_peer_auto_tls",
              "remarks": "rule_set_058"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the etcd service is not using self-signed certificates, run the following command: $ oc get cm/etcd-pod -n openshift-etcd -o yaml The etcd pod configuration contained in the configmap should not contain the --peer-auto-tls=true flag.",
              "remarks": "rule_set_058"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_worker_kubeconfig",
              "remarks": "rule_set_059"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /var/lib/kubelet/kubeconfig, run the command: $ sudo chgrp root /var/lib/kubelet/kubeconfig",
              "remarks": "rule_set_059"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_kube_controller_manager",
              "remarks": "rule_set_060"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /etc/kubernetes/static-pod-resources/kube-controller-manager-pod-*/kube-controller-manager-pod.yaml, run the command: $ sudo chmod 0600 /etc/kubernetes/static-pod-resources/kube-controller-manager-pod-*/kube-controller-manager-pod.yaml",
              "remarks": "rule_set_060"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_eviction_thresholds_set_hard_nodefs_available",
              "remarks": "rule_set_061"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Two types of garbage collection are performed on an OpenShift Container Platform node: Container garbage collection: Removes terminated containers. Image garbage collection: Removes images not referenced by any running pods. Container garbage collection can be performed using eviction thresholds. Image garbage collection relies on disk usage as reported by cAdvisor on the node to decide which images to remove from the node. The OpenShift administrator can configure how OpenShift Container Platform performs garbage collection by creating a kubeletConfig object for each Machine Config Pool using any combination of the following: soft eviction for containers hard eviction for containers eviction for images To configure, follow the directions in the documentation This rule pertains to the nodefs.available setting of the evictionHard section. Remediation will set field nodefs.available to {{ .var_kubelet_evictionhard_nodefs_available }} based on the variable var_kubelet_evictionhard_nodefs_available.",
              "remarks": "rule_set_061"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_kube_apiserver",
              "remarks": "rule_set_062"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /etc/kubernetes/static-pod-resources/kube-apiserver-pod-*/kube-apiserver-pod.yaml, run the command: $ sudo chgrp root /etc/kubernetes/static-pod-resources/kube-apiserver-pod-*/kube-apiserver-pod.yaml",
              "remarks": "rule_set_062"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_kube_scheduler",
              "remarks": "rule_set_063"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /etc/kubernetes/static-pod-resources/kube-scheduler-pod-*/kube-scheduler-pod.yaml, run the command: $ sudo chown root /etc/kubernetes/static-pod-resources/kube-scheduler-pod-*/kube-scheduler-pod.yaml",
              "remarks": "rule_set_063"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "accounts_restrict_service_account_tokens",
              "remarks": "rule_set_064"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Service accounts tokens should not be mounted in pods except where the workload running in the pod explicitly needs to communicate with the API server. To ensure pods do not automatically mount tokens, set automountServiceAccountToken to false.",
              "remarks": "rule_set_064"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_ovs_vswitchd_pid",
              "remarks": "rule_set_065"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Ensure that the file /run/openvswitch/ovs-vswitchd.pid, is owned by the group openvswitch or hugetlbfs, depending on your settings and Open vSwitch version.",
              "remarks": "rule_set_065"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "scc_limit_ipc_namespace",
              "remarks": "rule_set_066"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Containers should not be allowed access to the host's Interprocess Communication (IPC) namespace. To prevent containers from getting access to a host's IPC namespace, the appropriate Security Context Constraints (SCCs) should set allowHostIPC to false.",
              "remarks": "rule_set_066"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_kubelet_certificate_authority",
              "remarks": "rule_set_067"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure OpenShift verifies kubelet certificates before establishing connections, follow the OpenShift documentation and setup the TLS connection between the API Server and kubelets. Edit the openshift-kube-apiserver configmap and set the below parameter if it is not already configured: \"apiServerArguments\":{ ... \"kubelet-certificate-authority\":\"/etc/kubernetes/static-pod-resources/configmaps/kubelet-serving-ca/ca-bundle.crt\", ...",
              "remarks": "rule_set_067"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "scc_limit_privileged_containers",
              "remarks": "rule_set_068"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Containers should be limited to only the privileges required to run. To prevent containers from running as privileged containers, the appropriate Security Context Constraints (SCCs) should set allowPrivilegedContainer to false.",
              "remarks": "rule_set_068"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_openshift_pki_key_files",
              "remarks": "rule_set_069"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /etc/kubernetes/static-pod-resources/*/*/*/*.key, run the command: $ sudo chgrp root /etc/kubernetes/static-pod-resources/*/*/*/*.key",
              "remarks": "rule_set_069"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "controller_secure_port",
              "remarks": "rule_set_070"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the Controller Manager service is bound to secure loopback address using a secure port, set the RotateKubeletServerCertificate option to true in the openshift-kube-controller-manager configmap on the master node(s): \"extendedArguments\": { ... \"secure-port\": [\"10257\"], ...",
              "remarks": "rule_set_070"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_service_account_public_key",
              "remarks": "rule_set_071"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the API Server utilizes its own key pair, edit the openshift-kube-apiserver configmap and set the serviceAccountPublicKeyFiles parameter to the public key file for service accounts: ... \"serviceAccountPublicKeyFiles\":[ \"/etc/kubernetes/static-pod-resources/configmaps/sa-token-signing-certs\" ], ...",
              "remarks": "rule_set_071"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "secrets_no_environment_variables",
              "remarks": "rule_set_072"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Secrets should be mounted as data volumes instead of environment variables.",
              "remarks": "rule_set_072"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_admission_control_plugin_noderestriction",
              "remarks": "rule_set_073"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To limit the Node and Pod objects that a kubelet could modify, ensure that the NodeRestriction plugin on kubelets is enabled in the api-server configuration by running the following command: $ oc -n openshift-kube-apiserver get configmap config -o json | jq -r '.data.\"config.yaml\"' | jq '.apiServerArguments.\"enable-admission-plugins\"'",
              "remarks": "rule_set_073"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_configure_client_ca",
              "remarks": "rule_set_074"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "By default, the kubelet is not configured with a CA certificate which can subject the kubelet to man-in-the-middle attacks. To configure a client CA certificate, edit the kubelet configuration file /etc/kubernetes/kubelet.conf on the kubelet node(s) and set the below parameter: authentication: ... x509: clientCAFile: /etc/kubernetes/kubelet-ca.crt ...",
              "remarks": "rule_set_074"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_ovs_sys_id_conf",
              "remarks": "rule_set_075"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /etc/openvswitch/system-id.conf, run the command: $ sudo chown openvswitch /etc/openvswitch/system-id.conf",
              "remarks": "rule_set_075"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_cni_conf",
              "remarks": "rule_set_076"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /etc/cni/net.d/*, run the command: $ sudo chmod 0600 /etc/cni/net.d/*",
              "remarks": "rule_set_076"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_worker_service",
              "remarks": "rule_set_077"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "' To properly set the group owner of /etc/systemd/system/kubelet.service, run the command: $ sudo chgrp root /etc/systemd/system/kubelet.service'",
              "remarks": "rule_set_077"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_etcd_data_dir",
              "remarks": "rule_set_078"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /var/lib/etcd/member/, run the command: $ sudo chown root /var/lib/etcd/member/",
              "remarks": "rule_set_078"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_controller_manager_kubeconfig",
              "remarks": "rule_set_079"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /etc/kubernetes/static-pod-resources/kube-controller-manager-pod-*/configmaps/controller-manager-kubeconfig/kubeconfig, run the command: $ sudo chgrp root /etc/kubernetes/static-pod-resources/kube-controller-manager-pod-*/configmaps/controller-manager-kubeconfig/kubeconfig",
              "remarks": "rule_set_079"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_api_priority_flowschema_catch_all",
              "remarks": "rule_set_080"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Using APIPriorityAndFairness feature provides a fine-grained way to control the behaviour of the Kubernetes API server in an overload situation. The well-known FlowSchema catch-all should be available to make sure that every request gets some kind of classification. By default, the catch-all priority level only allows one concurrency share and does not queue requests. To inspect all the FlowSchema objects, run: oc get flowschema To inspect the well-known catch-all object, run the following: oc describe flowschema catch-all",
              "remarks": "rule_set_080"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_audit_log_maxsize",
              "remarks": "rule_set_081"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To rotate audit logs upon reaching a maximum size, edit the openshift-kube-apiserver configmap and set the audit-log-maxsize parameter to an appropriate size in MB. For example, to set it to 100 MB: \"apiServerArguments\":{ ... \"audit-log-maxsize\": [\"100\"], ...",
              "remarks": "rule_set_081"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_etcd_data_dir",
              "remarks": "rule_set_082"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /var/lib/etcd, run the command: $ sudo chmod 0700 /var/lib/etcd",
              "remarks": "rule_set_082"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_etcd_key",
              "remarks": "rule_set_083"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure etcd is configured to make use of TLS encryption for client communications, follow the OpenShift documentation and setup the TLS connection between the API Server and etcd. Then, verify that apiServerArguments has the etcd-keyfile configured in the openshift-kube-apiserver configmap to something similar to: ... \"etcd-keyfile\": [ \"/etc/kubernetes/static-pod-resources/secrets/etcd-client/tls.key\" ], ...",
              "remarks": "rule_set_083"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "general_default_namespace_use",
              "remarks": "rule_set_084"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Kubernetes provides a default namespace, where objects are placed if no namespace is specified for them. Placing objects in this namespace makes application of RBAC and other controls more difficult.",
              "remarks": "rule_set_084"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "scc_limit_privilege_escalation",
              "remarks": "rule_set_085"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Containers should be limited to only the privileges required to run and should not be allowed to escalate their privileges. To prevent containers from escalating privileges, the appropriate Security Context Constraints (SCCs) should set allowPrivilegeEscalation to false.",
              "remarks": "rule_set_085"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "rbac_pod_creation_access",
              "remarks": "rule_set_086"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The ability to create pods in a namespace can provide a number of opportunities for privilege escalation. Where applicable, remove create access to pod objects in the cluster.",
              "remarks": "rule_set_086"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_worker_ca",
              "remarks": "rule_set_087"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /etc/kubernetes/kubelet-ca.crt, run the command: $ sudo chgrp root /etc/kubernetes/kubelet-ca.crt",
              "remarks": "rule_set_087"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_auth_mode_no_aa",
              "remarks": "rule_set_088"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Do not always authorize all requests.",
              "remarks": "rule_set_088"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_ovs_pid",
              "remarks": "rule_set_089"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /var/run/openvswitch/ovs-vswitchd.pid, run the command: $ sudo chmod 0644 /var/run/openvswitch/ovs-vswitchd.pid",
              "remarks": "rule_set_089"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_ovsdb_server_pid",
              "remarks": "rule_set_090"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Ensure that the file /run/openvswitch/ovsdb-server.pid, is owned by the group openvswitch or hugetlbfs, depending on your settings and Open vSwitch version.",
              "remarks": "rule_set_090"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_ip_allocations",
              "remarks": "rule_set_091"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /var/lib/cni/networks/openshift-sdn/.*, run the command: $ sudo chgrp root /var/lib/cni/networks/openshift-sdn/.*",
              "remarks": "rule_set_091"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_ovs_conf_db",
              "remarks": "rule_set_092"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /etc/openvswitch/conf.db, run the command: $ sudo chmod 0640 /etc/openvswitch/conf.db",
              "remarks": "rule_set_092"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_eviction_thresholds_set_hard_memory_available",
              "remarks": "rule_set_093"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Two types of garbage collection are performed on an OpenShift Container Platform node: Container garbage collection: Removes terminated containers. Image garbage collection: Removes images not referenced by any running pods. Container garbage collection can be performed using eviction thresholds. Image garbage collection relies on disk usage as reported by cAdvisor on the node to decide which images to remove from the node. The OpenShift administrator can configure how OpenShift Container Platform performs garbage collection by creating a kubeletConfig object for each Machine Config Pool using any combination of the following: soft eviction for containers hard eviction for containers eviction for images To configure, follow the directions in the documentation This rule pertains to the memory.available setting of the evictionHard section. Remediation will set field memory.available to {{ .var_kubelet_evictionhard_memory_available }} based on the variable var_kubelet_evictionhard_memory_available.",
              "remarks": "rule_set_093"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_token_auth",
              "remarks": "rule_set_094"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure OpenShift does not accept token-based authentication, follow the OpenShift documentation and configure alternate mechanisms for authentication. Then, edit the API Server pod specification file Edit the openshift-kube-apiserver configmap and remove the token-auth-file parameter: \"apiServerArguments\":{ ... \"token-auth-file\":[ \"/path/to/any/file\" ], ...",
              "remarks": "rule_set_094"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_worker_kubeconfig",
              "remarks": "rule_set_095"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /var/lib/kubelet/kubeconfig, run the command: $ sudo chown root /var/lib/kubelet/kubeconfig",
              "remarks": "rule_set_095"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_controller_manager_kubeconfig",
              "remarks": "rule_set_096"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /etc/kubernetes/static-pod-resources/kube-controller-manager-pod-*/configmaps/controller-manager-kubeconfig/kubeconfig, run the command: $ sudo chmod 0600 /etc/kubernetes/static-pod-resources/kube-controller-manager-pod-*/configmaps/controller-manager-kubeconfig/kubeconfig",
              "remarks": "rule_set_096"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "controller_service_account_ca",
              "remarks": "rule_set_097"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the API Server utilizes its own key pair, set the masterCA parameter to the public key file for service accounts in the openshift-kube-controller-manager configmap on the master node(s): \"extendedArguments\": { ... \"root-ca-file\": [ \"/etc/kubernetes/static-pod-resources/configmaps/serviceaccount-ca/ca-bundle.crt\" ], ...",
              "remarks": "rule_set_097"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_worker_ca",
              "remarks": "rule_set_098"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /etc/kubernetes/kubelet-ca.crt, run the command: $ sudo chmod 0644 /etc/kubernetes/kubelet-ca.crt",
              "remarks": "rule_set_098"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_enable_streaming_connections",
              "remarks": "rule_set_099"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Timouts for streaming connections should not be disabled as they help to prevent denial-of-service attacks. To configure streaming connection timeouts To set the streamingConnectionIdleTimeout option for the kubelet, create a KubeletConfig option along these lines: apiVersion: machineconfiguration.openshift.io/v1 kind: KubeletConfig metadata: name: kubelet-config-$pool spec: machineConfigPoolSelector: matchLabels: pools.operator.machineconfiguration.openshift.io/$pool_name: \"\" kubeletConfig: streamingConnectionIdleTimeout:",
              "remarks": "rule_set_099"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_authorization_mode",
              "remarks": "rule_set_100"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Unauthenticated/unauthorized users should have no access to OpenShift nodes. The Kubelet should be set to only allow Webhook authorization. To ensure that the Kubelet requires authorization, validate that authorization is configured to Webhook in /etc/kubernetes/kubelet.conf: authorization: mode: Webhook ...",
              "remarks": "rule_set_100"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "etcd_unique_ca",
              "remarks": "rule_set_101"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "A unique CA certificate should be created for etcd. OpenShift by default creates separate PKIs for etcd and the Kubernetes API server. The same is done for other points of communication in the cluster.",
              "remarks": "rule_set_101"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_openshift_pki_cert_files",
              "remarks": "rule_set_102"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /etc/kubernetes/static-pod-resources/*/*/*/tls.crt, run the command: $ sudo chown root /etc/kubernetes/static-pod-resources/*/*/*/tls.crt",
              "remarks": "rule_set_102"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_eviction_thresholds_set_hard_nodefs_inodesfree",
              "remarks": "rule_set_103"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Two types of garbage collection are performed on an OpenShift Container Platform node: Container garbage collection: Removes terminated containers. Image garbage collection: Removes images not referenced by any running pods. Container garbage collection can be performed using eviction thresholds. Image garbage collection relies on disk usage as reported by cAdvisor on the node to decide which images to remove from the node. The OpenShift administrator can configure how OpenShift Container Platform performs garbage collection by creating a kubeletConfig object for each Machine Config Pool using any combination of the following: soft eviction for containers hard eviction for containers eviction for images To configure, follow the directions in the documentation This rule pertains to the nodefs.inodesFree setting of the evictionHard section. Remediation will set field nodefs.inodesFree to {{ .var_kubelet_evictionhard_nodefs_inodesfree }} based on the variable var_kubelet_evictionhard_nodefs_inodesfree.",
              "remarks": "rule_set_103"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "scc_limit_net_raw_capability",
              "remarks": "rule_set_104"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Containers should not enable more capabilities than needed as this opens the door for malicious use. CAP_NET_RAW enables a container to launch a network attack on another container or cluster. To disable the CAP_NET_RAW capability, the appropriate Security Context Constraints (SCCs) should set NET_RAW in requiredDropCapabilities.",
              "remarks": "rule_set_104"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_worker_kubeconfig",
              "remarks": "rule_set_105"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /var/lib/kubelet/kubeconfig, run the command: $ sudo chmod 0600 /var/lib/kubelet/kubeconfig",
              "remarks": "rule_set_105"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "scc_limit_root_containers",
              "remarks": "rule_set_106"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Containers should run as a random non-privileged user. To prevent containers from running as root user, the appropriate Security Context Constraints (SCCs) should set .runAsUser.type to MustRunAsRange.",
              "remarks": "rule_set_106"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_openshift_pki_key_files",
              "remarks": "rule_set_107"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /etc/kubernetes/static-pod-resources/*/*/*/*.key, run the command: $ sudo chown root /etc/kubernetes/static-pod-resources/*/*/*/*.key",
              "remarks": "rule_set_107"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "etcd_peer_client_cert_auth",
              "remarks": "rule_set_108"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the etcd service is serving TLS to clients, make sure the etcd-pod* ConfigMaps in the openshift-etcd namespace contain the following argument for the etcd binary in the etcd pod: oc get -nopenshift-etcd cm etcd-pod -oyaml | grep \"\\-\\-peer-client-cert-auth=\" the parameter should be set to true.",
              "remarks": "rule_set_108"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_master_admin_kubeconfigs",
              "remarks": "rule_set_109"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/node-kubeconfigs/*.kubeconfig, run the command: $ sudo chgrp root /etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/node-kubeconfigs/*.kubeconfig",
              "remarks": "rule_set_109"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_integrity_exists",
              "remarks": "rule_set_110"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The File Integrity Operator continually runs file integrity checks on the cluster nodes. It deploys a daemon set that initializes and runs privileged AIDE containers on each node, providing a status object with a log of files that are modified during the initial run of the daemon set pods.",
              "remarks": "rule_set_110"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_proxy_kubeconfig",
              "remarks": "rule_set_111"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the Kubernetes ConfigMap is mounted into the sdn daemonset pods with the correct ownership, make sure that the sdn-config ConfigMap is mounted using a ConfigMap at the /config mount point and that the sdn container points to that configuration using the --proxy-config command line option. Run: oc get -nopenshift-sdn ds sdn -ojson | jq -r '.spec.template.spec.containers[] | select(.name == \"sdn\")' and ensure the --proxy-config parameter points to /config/kube-proxy-config.yaml and that the config mount point is mounted from the sdn-config ConfigMap.",
              "remarks": "rule_set_111"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_etcd_data_files",
              "remarks": "rule_set_112"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /var/lib/etcd/member/wal/*, run the command: $ sudo chgrp root /var/lib/etcd/member/wal/*",
              "remarks": "rule_set_112"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_auth_mode_node",
              "remarks": "rule_set_113"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Restrict kubelet nodes to reading only objects associated with them.",
              "remarks": "rule_set_113"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "controller_rotate_kubelet_server_certs",
              "remarks": "rule_set_114"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To enforce kubelet server certificate rotation on the Controller Manager, set the RotateKubeletServerCertificate option to true in the openshift-kube-controller-manager configmap on the master node(s): \"extendedArguments\": { ... \"feature-gates\": [ ... \"RotateKubeletServerCertificate=true\", ... ... This feature gate is enabled by default as of Kubernetes 1.12.",
              "remarks": "rule_set_114"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_openshift_https_serving_cert",
              "remarks": "rule_set_115"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "By default, the OpenShift API Server uses TLS. HTTPS should be used for connections between openshift-apiserver and kube-apiserver. By default, the OpenShift OAuth API Server uses Intermediate profile which requires a minimum TLS version of 1.2.",
              "remarks": "rule_set_115"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_service_account_lookup",
              "remarks": "rule_set_116"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Validate service account before validating token.",
              "remarks": "rule_set_116"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_openshift_pki_cert_files",
              "remarks": "rule_set_117"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /etc/kubernetes/static-pod-resources/*/*/*/tls.crt, run the command: $ sudo chgrp root /etc/kubernetes/static-pod-resources/*/*/*/tls.crt",
              "remarks": "rule_set_117"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "general_namespaces_in_use",
              "remarks": "rule_set_118"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Use namespaces to isolate your Kubernetes objects.",
              "remarks": "rule_set_118"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_kubelet_conf",
              "remarks": "rule_set_119"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /etc/kubernetes/kubelet.conf, run the command: $ sudo chgrp root /etc/kubernetes/kubelet.conf",
              "remarks": "rule_set_119"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "accounts_unique_service_account",
              "remarks": "rule_set_120"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Using the default service account prevents accurate application rights review and audit tracing. Instead of default, create a new and unique service account with the following command: $ oc create sa service_account_name where service_account_name is the name of a service account that is needed in the project namespace.",
              "remarks": "rule_set_120"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_admission_control_plugin_service_account",
              "remarks": "rule_set_121"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure ServiceAccount objects must be created and granted before pod creation is allowed, follow the documentation and create ServiceAccount objects as per your environment. Ensure that the plugin is enabled in the api-server configuration: $ oc -n openshift-kube-apiserver get configmap config -o json | jq -r '.data.\"config.yaml\"' | jq '.apiServerArguments.\"enable-admission-plugins\"'",
              "remarks": "rule_set_121"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_kube_controller_manager",
              "remarks": "rule_set_122"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /etc/kubernetes/static-pod-resources/kube-controller-manager-pod-*/kube-controller-manager-pod.yaml, run the command: $ sudo chown root /etc/kubernetes/static-pod-resources/kube-controller-manager-pod-*/kube-controller-manager-pod.yaml",
              "remarks": "rule_set_122"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_enable_protect_kernel_sysctl",
              "remarks": "rule_set_123"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Setup required tuned kernel parameters before enabling overwritten protection. Note that depending on the Linux distribution and its version that your cluster nodes are running, these parameters might be already set up for you. Please refer to the rule instructions for a check. Before enabling kernel parameter overwritten protection default, it's important to check if these values are already set to the required values. If not, it is necessary to first create a MachineConfig object that persist the required sysctl's. The required sysctl's are the following: kernel.keys.root_maxbytes=25000000 kernel.keys.root_maxkeys=1000000 kernel.panic=10 kernel.panic_on_oops=1 vm.overcommit_memory=1 vm.panic_on_oom=0 The these need to be enabled via MachineConfig since they need to be available as soon as the node starts and before the Kubelet does. The manifest may look as follows: --- apiVersion: machineconfiguration.openshift.io/v1 kind: MachineConfig metadata: labels: machineconfiguration.openshift.io/role: master name: 75-master-kubelet-sysctls spec: config: ignition: version: 3.1.0 storage: files: - contents: source: data:,vm.overcommit_memory%3D1%0Avm.panic_on_oom%3D0%0Akernel.panic%3D10%0Akernel.panic_on_oops%3D1%0Akernel.keys.root_maxkeys%3D1000000%0Akernel.keys.root_maxbytes%3D25000000%0A mode: 0644 path: /etc/sysctl.d/90-kubelet.conf overwrite: true This will need to be done for each relevant MachineConfigPool in the cluster. To configure, follow the directions in the documentation",
              "remarks": "rule_set_123"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_enable_protect_kernel_defaults",
              "remarks": "rule_set_124"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Protect tuned kernel parameters from being overwritten by the kubelet. Before enabling this kernel parameter, it's important and necessary to first create a MachineConfig object that persist the required sysctl's. The required sysctl's are the following: kernel.keys.root_maxbytes=25000000 kernel.keys.root_maxkeys=1000000 kernel.panic=10 kernel.panic_on_oops=1 vm.overcommit_memory=1 vm.panic_on_oom=0 The these need to be enabled via MachineConfig since they need to be available as soon as the node starts and before the Kubelet does. The manifest may look as follows: --- apiVersion: machineconfiguration.openshift.io/v1 kind: MachineConfig metadata: labels: machineconfiguration.openshift.io/role: master name: 75-master-kubelet-sysctls spec: config: ignition: version: 3.1.0 storage: files: - contents: source: data:,vm.overcommit_memory%3D1%0Avm.panic_on_oom%3D0%0Akernel.panic%3D10%0Akernel.panic_on_oops%3D1%0Akernel.keys.root_maxkeys%3D1000000%0Akernel.keys.root_maxbytes%3D25000000%0A mode: 0644 path: /etc/sysctl.d/90-kubelet.conf overwrite: true This will need to be done for each relevant MachineConfigPool in the cluster. After enabling this and after the changes have successfully rolled out to the whole cluster, it will now be possible to set the protectKernelDefaults parameter. To configure, follow the directions in the documentation",
              "remarks": "rule_set_124"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_kubelet_conf",
              "remarks": "rule_set_125"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /etc/kubernetes/kubelet.conf, run the command: $ sudo chown root /etc/kubernetes/kubelet.conf",
              "remarks": "rule_set_125"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_kubelet",
              "remarks": "rule_set_126"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /var/lib/kubelet/config.json, run the command: $ sudo chown root /var/lib/kubelet/config.json",
              "remarks": "rule_set_126"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_multus_conf",
              "remarks": "rule_set_127"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /var/run/multus/cni/net.d/*, run the command: $ sudo chgrp root /var/run/multus/cni/net.d/*",
              "remarks": "rule_set_127"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_enable_iptables_util_chains",
              "remarks": "rule_set_128"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The kubelet has the ability to automatically configure the firewall to allow the containers required ports and connections to networking resources and destinations parameters potentially creating a security incident. To allow the kubelet to modify the firewall, edit the kubelet configuration file /etc/kubernetes/kubelet.conf on the kubelet node(s) and set the below parameter: makeIPTablesUtilChains: true",
              "remarks": "rule_set_128"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "controller_service_account_private_key",
              "remarks": "rule_set_129"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the API Server utilizes its own key pair, set the privateKeyFile parameter to the public key file for service accounts in the openshift-kube-controller-manager configmap on the master node(s): \"extendedArguments\": { ... \"service-account-private-key-file\": [ \"/etc/kubernetes/static-pod-resources/secrets/service-account-private-key/service-account.key\" ], ...",
              "remarks": "rule_set_129"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_worker_ca",
              "remarks": "rule_set_130"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /etc/kubernetes/kubelet-ca.crt, run the command: $ sudo chown root /etc/kubernetes/kubelet-ca.crt",
              "remarks": "rule_set_130"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_kube_apiserver",
              "remarks": "rule_set_131"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /etc/kubernetes/static-pod-resources/kube-apiserver-pod-*/kube-apiserver-pod.yaml, run the command: $ sudo chmod 0600 /etc/kubernetes/static-pod-resources/kube-apiserver-pod-*/kube-apiserver-pod.yaml",
              "remarks": "rule_set_131"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_ovs_pid",
              "remarks": "rule_set_132"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /var/run/openvswitch/ovs-vswitchd.pid, run the command: $ sudo chown openvswitch /var/run/openvswitch/ovs-vswitchd.pid",
              "remarks": "rule_set_132"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_configure_event_creation",
              "remarks": "rule_set_133"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Security relevant information should be captured. The eventRecordQPS Kubelet option can be used to limit the rate at which events are gathered. Setting this too low could result in relevant events not being logged, however the unlimited setting of 0 could result in a denial of service on the kubelet. Processing and storage systems should be scaled to handle the expected event load. To set the eventRecordQPS option for the kubelet, create a KubeletConfig option along these lines: apiVersion: machineconfiguration.openshift.io/v1 kind: KubeletConfig metadata: name: kubelet-config-$pool spec: machineConfigPoolSelector: matchLabels: pools.operator.machineconfiguration.openshift.io/$pool_name: \"\" kubeletConfig: eventRecordQPS:",
              "remarks": "rule_set_133"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_worker_service",
              "remarks": "rule_set_134"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "' To properly set the owner of /etc/systemd/system/kubelet.service, run the command: $ sudo chown root /etc/systemd/system/kubelet.service '",
              "remarks": "rule_set_134"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "etcd_key_file",
              "remarks": "rule_set_135"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the etcd service is serving TLS to clients, make sure the etcd-pod* ConfigMaps in the openshift-etcd namespace contain the following argument for the etcd binary in the etcd pod: oc get -nopenshift-etcd cm etcd-pod -oyaml | grep \"\\-\\-key-file=/etc/kubernetes/static-pod-certs/secrets/etcd-all-[a-z]+/etcd-serving-NODE_NAME.key\". Note that the [a-z]+ is being used since the directory might change between OpenShift versions.",
              "remarks": "rule_set_135"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_master_admin_kubeconfigs",
              "remarks": "rule_set_136"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/node-kubeconfigs/*.kubeconfig, run the command: $ sudo chmod 0600 /etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/node-kubeconfigs/*.kubeconfig",
              "remarks": "rule_set_136"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_etcd_pki_cert_files",
              "remarks": "rule_set_137"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /etc/kubernetes/static-pod-resources/*/*/*/*.crt, run the command: $ sudo chgrp root /etc/kubernetes/static-pod-resources/*/*/*/*.crt",
              "remarks": "rule_set_137"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_insecure_bind_address",
              "remarks": "rule_set_138"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "OpenShift should not bind to non-loopback insecure addresses. Edit the openshift-kube-apiserver configmap and remove the insecure-bind-address if it exists: \"apiServerArguments\":{ ... \"insecure-bind-address\":[ \"127.0.0.1\" ], ...",
              "remarks": "rule_set_138"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_proxy_kubeconfig",
              "remarks": "rule_set_139"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the Kubernetes ConfigMap is mounted into the sdn daemonset pods with the correct permissions, make sure that the sdn-config ConfigMap is mounted using restrictive permissions. Check that the config VolumeMount mounts the sdn-config configMap with permissions set to 420: { \"configMap\": { \"defaultMode\": 420, \"name\": \"sdn-config\" }, \"name\": \"config\" }",
              "remarks": "rule_set_139"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_enable_client_cert_rotation",
              "remarks": "rule_set_140"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To enable the kubelet to rotate client certificates, edit the kubelet configuration file /etc/kubernetes/kubelet.conf on the kubelet node(s) and set the below parameter: featureGates: ... RotateKubeletClientCertificate: true ...",
              "remarks": "rule_set_140"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_ovs_sys_id_conf",
              "remarks": "rule_set_141"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /etc/openvswitch/system-id.conf, run the command: $ sudo chmod 0644 /etc/openvswitch/system-id.conf",
              "remarks": "rule_set_141"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_kube_apiserver",
              "remarks": "rule_set_142"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /etc/kubernetes/static-pod-resources/kube-apiserver-pod-*/kube-apiserver-pod.yaml, run the command: $ sudo chown root /etc/kubernetes/static-pod-resources/kube-apiserver-pod-*/kube-apiserver-pod.yaml",
              "remarks": "rule_set_142"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_ovs_conf_db",
              "remarks": "rule_set_143"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /etc/openvswitch/conf.db, run the command: $ sudo chown openvswitch /etc/openvswitch/conf.db",
              "remarks": "rule_set_143"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_anonymous_auth",
              "remarks": "rule_set_144"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "By default, anonymous access to the Kubelet server is enabled. This configuration check ensures that anonymous requests to the Kubelet server are disabled. Edit the Kubelet server configuration file /etc/kubernetes/kubelet.conf on the kubelet node(s) and set the below parameter: authentication: ... anonymous: enabled: false ...",
              "remarks": "rule_set_144"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_controller_manager_kubeconfig",
              "remarks": "rule_set_145"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /etc/kubernetes/static-pod-resources/kube-controller-manager-pod-*/configmaps/controller-manager-kubeconfig/kubeconfig, run the command: $ sudo chown root /etc/kubernetes/static-pod-resources/kube-controller-manager-pod-*/configmaps/controller-manager-kubeconfig/kubeconfig",
              "remarks": "rule_set_145"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_openshift_sdn_cniserver_config",
              "remarks": "rule_set_146"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /var/run/openshift-sdn/cniserver/config.json, run the command: $ sudo chgrp root /var/run/openshift-sdn/cniserver/config.json",
              "remarks": "rule_set_146"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "rbac_wildcard_use",
              "remarks": "rule_set_147"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Kubernetes Cluster and Local Roles provide access to resources based on sets of objects and actions that can be taken on those objects. It is possible to set either of these using a wildcard * which matches all items. This violates the principle of least privilege and leaves a cluster in a more vulnerable state to privilege abuse.",
              "remarks": "rule_set_147"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_proxy_kubeconfig",
              "remarks": "rule_set_148"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the Kubernetes ConfigMap is mounted into the sdn daemonset pods with the correct ownership, make sure that the sdn-config ConfigMap is mounted using a ConfigMap at the /config mount point and that the sdn container points to that configuration using the --proxy-config command line option. Run: oc get -nopenshift-sdn ds sdn -ojson | jq -r '.spec.template.spec.containers[] | select(.name == \"sdn\")' and ensure the --proxy-config parameter points to /config/kube-proxy-config.yaml and that the config mount point is mounted from the sdn-config ConfigMap.",
              "remarks": "rule_set_148"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "general_apply_scc",
              "remarks": "rule_set_149"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Apply Security Context to your Pods and Containers",
              "remarks": "rule_set_149"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "etcd_cert_file",
              "remarks": "rule_set_150"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the etcd service is serving TLS to clients, make sure the etcd-pod* ConfigMaps in the openshift-etcd namespace contain the following argument for the etcd binary in the etcd pod: --cert-file=/etc/kubernetes/static-pod-certs/secrets/etcd-all-[a-z]+/etcd-serving-NODE_NAME.crt. Note that the [a-z]+ is being used since the directory might change between OpenShift versions.",
              "remarks": "rule_set_150"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_auth_mode_rbac",
              "remarks": "rule_set_151"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure OpenShift restricts different identities to a defined set of operations they are allowed to perform, check that the API server's authorization-mode configuration option list contains RBAC.",
              "remarks": "rule_set_151"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_etcd_pki_cert_files",
              "remarks": "rule_set_152"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /etc/kubernetes/static-pod-resources/etcd-*/secrets/*/*.crt, run the command: $ sudo chmod 0600 /etc/kubernetes/static-pod-resources/etcd-*/secrets/*/*.crt",
              "remarks": "rule_set_152"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "general_configure_imagepolicywebhook",
              "remarks": "rule_set_153"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "OpenShift administrators can control which images can be imported, tagged, and run in a cluster. There are two facilities for this purpose: (1) Allowed Registries, allowing administrators to restrict image origins to known external registries; and (2) ImagePolicy Admission plug-in which lets administrators specify specific images which are allowed to run on the OpenShift cluster. Configure an Image policy per the Image Policy chapter in the OpenShift documentation: https://docs.openshift.com/container-platform/4.4/openshift_images/image-configuration.html",
              "remarks": "rule_set_153"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_etcd_data_files",
              "remarks": "rule_set_154"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /var/lib/etcd/member/wal/*, run the command: $ sudo chmod 0600 /var/lib/etcd/member/wal/*",
              "remarks": "rule_set_154"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_kubelet_client_cert",
              "remarks": "rule_set_155"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To enable certificate based kubelet authentication, edit the config configmap in the openshift-kube-apiserver namespace and set the below parameter in the config.yaml key if it is not already configured: \"apiServerArguments\":{ ... \"kubelet-client-certificate\":\"/etc/kubernetes/static-pod-resources/secrets/kubelet-client/tls.crt\", ... }",
              "remarks": "rule_set_155"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_kubelet_client_cert_pre_4_9",
              "remarks": "rule_set_156"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To enable certificate based kubelet authentication, edit the config configmap in the openshift-kube-apiserver namespace and set the below parameter in the config.yaml key if it is not already configured: \"apiServerArguments\":{ ... \"kubelet-client-certificate\":\"/etc/kubernetes/static-pod-resources/secrets/kubelet-client/tls.crt\", ... } Note that this particular rule is only valid for OCP releases up to and including 4.8",
              "remarks": "rule_set_156"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_etcd_data_files",
              "remarks": "rule_set_157"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /var/lib/etcd/member/wal/*, run the command: $ sudo chown root /var/lib/etcd/member/wal/*",
              "remarks": "rule_set_157"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_etcd_member",
              "remarks": "rule_set_158"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /etc/kubernetes/manifests/etcd-pod.yaml, run the command: $ sudo chmod 0600 /etc/kubernetes/manifests/etcd-pod.yaml",
              "remarks": "rule_set_158"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_scheduler_kubeconfig",
              "remarks": "rule_set_159"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /etc/kubernetes/static-pod-resources/kube-scheduler-pod-*/configmaps/scheduler-kubeconfig/kubeconfig, run the command: $ sudo chgrp root /etc/kubernetes/static-pod-resources/kube-scheduler-pod-*/configmaps/scheduler-kubeconfig/kubeconfig",
              "remarks": "rule_set_159"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "openshift_api_server_audit_log_path",
              "remarks": "rule_set_160"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To enable auditing on the OpenShift API Server, the audit log path must be set. Edit the openshift-apiserver configmap and set the audit-log-path to a suitable path and file where audit logs should be written. For example: \"apiServerArguments\":{ ... \"audit-log-path\":\"/var/log/openshift-apiserver/audit.log\", ...",
              "remarks": "rule_set_160"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_profiling_protected_by_rbac",
              "remarks": "rule_set_161"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Ensure that the cluster-debugger cluster role includes the /metrics resource URL. This demonstrates that profiling is protected by RBAC, with a specific cluster role to allow access.",
              "remarks": "rule_set_161"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_admission_control_plugin_alwaysadmit",
              "remarks": "rule_set_162"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure OpenShift only responses to requests explicitly allowed by the admission control plugin. Check that the config ConfigMap object does not contain the AlwaysAdmit plugin.",
              "remarks": "rule_set_162"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "scc_limit_container_allowed_capabilities",
              "remarks": "rule_set_163"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Containers should not enable more capabilites than needed as this opens the door for malicious use. To enable only the required capabilities, the appropriate Security Context Constraints (SCCs) should set capabilities as a list in allowedCapabilities. In case an SCC outside the default allow list in the variable var-sccs-with-allowed-capabilities-regex is being flagged, create a TailoredProfile and add the additional SCC to the regular expression in the variable var-sccs-with-allowed-capabilities-regex. An example allowing an SCC named additional follows: apiVersion: compliance.openshift.io/v1alpha1 kind: TailoredProfile metadata: name: cis-additional-scc spec: description: Allows an additional scc setValues: - name: ocp4-var-sccs-with-allowed-capabilities-regex rationale: Allow our own custom SCC value: ^privileged$|^hostnetwork-v2$|^restricted-v2$|^nonroot-v2$|^additional$ extends: ocp4-cis title: Modified CIS allowing one more SCC Finally, reference this TailoredProfile in a ScanSettingBinding For more information on Tailoring the Compliance Operator, please consult the OpenShift documentation: https://docs.openshift.com/container-platform/latest/security/compliance_operator/co-scans/compliance-operator-tailor.html",
              "remarks": "rule_set_163"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_multus_conf",
              "remarks": "rule_set_164"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /var/run/multus/cni/net.d/*, run the command: $ sudo chown root /var/run/multus/cni/net.d/*",
              "remarks": "rule_set_164"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_kubelet_client_key",
              "remarks": "rule_set_165"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To enable certificate based kubelet authentication, edit the config configmap in the openshift-kube-apiserver namespace and set the below parameter in the config.yaml key if it is not already configured: \"apiServerArguments\":{ ... \"kubelet-client-key\":\"/etc/kubernetes/static-pod-resources/secrets/kubelet-client/tls.key\", ... }",
              "remarks": "rule_set_165"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_kubelet_client_key_pre_4_9",
              "remarks": "rule_set_166"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To enable certificate based kubelet authentication, edit the config configmap in the openshift-kube-apiserver namespace and set the below parameter in the config.yaml key if it is not already configured: \"apiServerArguments\":{ ... \"kubelet-client-key\":\"/etc/kubernetes/static-pod-resources/secrets/kubelet-client/tls.key\", ... } Note that this particular rule is only valid for OCP releases up to and including 4.8",
              "remarks": "rule_set_166"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_basic_auth",
              "remarks": "rule_set_167"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Basic Authentication should not be used for any reason. If needed, edit API Edit the openshift-kube-apiserver configmap and remove the basic-auth-file parameter: \"apiServerArguments\":{ ... \"basic-auth-file\":[ \"/path/to/any/file\" ], ... Alternate authentication mechanisms such as tokens and certificates will need to be used. Username and password for basic authentication will be disabled.",
              "remarks": "rule_set_167"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_etcd_cert",
              "remarks": "rule_set_168"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure etcd is configured to make use of TLS encryption for client communications, follow the OpenShift documentation and setup the TLS connection between the API Server and etcd. Then, verify that apiServerArguments has the etcd-certfile configured in the openshift-kube-apiserver configmap to something similar to: ... \"etcd-certfile\": [ \"/etc/kubernetes/static-pod-resources/secrets/etcd-client/tls.crt\" ], ...",
              "remarks": "rule_set_168"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_scheduler",
              "remarks": "rule_set_169"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /etc/kubernetes/static-pod-resources/kube-scheduler-pod-*/kube-scheduler-pod.yaml, run the command: $ sudo chmod 0644 /etc/kubernetes/static-pod-resources/kube-scheduler-pod-*/kube-scheduler-pod.yaml",
              "remarks": "rule_set_169"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_eviction_thresholds_set_hard_imagefs_available",
              "remarks": "rule_set_170"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Two types of garbage collection are performed on an OpenShift Container Platform node: Container garbage collection: Removes terminated containers. Image garbage collection: Removes images not referenced by any running pods. Container garbage collection can be performed using eviction thresholds. Image garbage collection relies on disk usage as reported by cAdvisor on the node to decide which images to remove from the node. The OpenShift administrator can configure how OpenShift Container Platform performs garbage collection by creating a kubeletConfig object for each Machine Config Pool using any combination of the following: soft eviction for containers hard eviction for containers eviction for images To configure, follow the directions in the documentation This rule pertains to the imagefs.available setting of the evictionHard section. Remediation will set field imagefs.available to {{ .var_kubelet_evictionhard_imagefs_available }} based on the variable var_kubelet_evictionhard_imagefs_available.",
              "remarks": "rule_set_170"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "etcd_client_cert_auth",
              "remarks": "rule_set_171"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the etcd service is serving TLS to clients, make sure the etcd-pod* ConfigMaps in the openshift-etcd namespace contain the following argument for the etcd binary in the etcd pod: oc get -nopenshift-etcd cm etcd-pod -oyaml | grep \"\\-\\-client-cert-auth=\" the parameter should be set to true.",
              "remarks": "rule_set_171"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_anonymous_auth",
              "remarks": "rule_set_172"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "By default, anonymous access to the OpenShift API is enabled, but at the same time, all requests must be authorized. If no authentication mechanism is used, the request is assigned the system:anonymous virtual user and the system:unauthenticated virtual group. This allows the authorization layer to determine which requests, if any, is an anonymous user authorized to make. To verify the authorization rules for anonymous requests run the following: $ oc describe clusterrolebindings and inspect the bindings of the system:anonymous virtual user and the system:unauthenticated virtual group. To test that an anonymous request is authorized to access the readyz endpoint, run: $ oc get --as=\"system:anonymous\" --raw='/readyz?verbose' In contrast, a request to list all projects should not be authorized: $ oc get --as=\"system:anonymous\" projects",
              "remarks": "rule_set_172"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "scc_limit_process_id_namespace",
              "remarks": "rule_set_173"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Containers should not be allowed access to the host's process ID namespace. To prevent containers from getting access to a host's process ID namespace, the appropriate Security Context Constraints (SCCs) should set allowHostPID to false.",
              "remarks": "rule_set_173"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "scc_drop_container_capabilities",
              "remarks": "rule_set_174"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Containers should not enable more capabilities than needed as this opens the door for malicious use. To disable the capabilities, the appropriate Security Context Constraints (SCCs) should set all capabilities as * or a list of capabilities in requiredDropCapabilities.",
              "remarks": "rule_set_174"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "controller_insecure_port_disabled",
              "remarks": "rule_set_175"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the Controller Manager service is bound to secure loopback address and a secure port, set the RotateKubeletServerCertificate option to true in the openshift-kube-controller-manager configmap on the master node(s): \"extendedArguments\": { ... \"port\": [\"0\"], ... It is also acceptable for a system to deprecate the insecure port: \"extendedArguments\": { ... ...",
              "remarks": "rule_set_175"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_no_adm_ctrl_plugins_disabled",
              "remarks": "rule_set_176"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To make sure none of them is explicitly disabled except PodSecurity, run the following command: $ oc -n openshift-kube-apiserver get configmap config -o json | jq -r '[.data.\"config.yaml\" | fromjson | .apiServerArguments | select(has(\"disable-admission-plugins\")) | if .\"disable-admission-plugins\" != [\"PodSecurity\"] then .\"disable-admission-plugins\" else empty end]' and make sure the output is empty.",
              "remarks": "rule_set_176"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_kube_controller_manager",
              "remarks": "rule_set_177"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /etc/kubernetes/static-pod-resources/kube-controller-manager-pod-*/kube-controller-manager-pod.yaml, run the command: $ sudo chgrp root /etc/kubernetes/static-pod-resources/kube-controller-manager-pod-*/kube-controller-manager-pod.yaml",
              "remarks": "rule_set_177"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_ip_allocations",
              "remarks": "rule_set_178"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /var/lib/cni/networks/openshift-sdn/*, run the command: $ sudo chmod 0644 /var/lib/cni/networks/openshift-sdn/*",
              "remarks": "rule_set_178"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_etcd_member",
              "remarks": "rule_set_179"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /etc/kubernetes/manifests/etcd-pod.yaml, run the command: $ sudo chown root /etc/kubernetes/manifests/etcd-pod.yaml",
              "remarks": "rule_set_179"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_scheduler_kubeconfig",
              "remarks": "rule_set_180"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /etc/kubernetes/static-pod-resources/kube-scheduler-pod-*/configmaps/scheduler-kubeconfig/kubeconfig, run the command: $ sudo chmod 0600 /etc/kubernetes/static-pod-resources/kube-scheduler-pod-*/configmaps/scheduler-kubeconfig/kubeconfig",
              "remarks": "rule_set_180"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "scansettingbinding_exists",
              "remarks": "rule_set_181"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The Compliance Operator scans the hosts and the platform (OCP) configurations for software flaws and improper configurations according to different compliance benchmarks. It uses OpenSCAP as a backend, which is a known and certified tool to do such scans.",
              "remarks": "rule_set_181"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "general_default_seccomp_profile",
              "remarks": "rule_set_182"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Enable default seccomp profiles in your pod definitions.",
              "remarks": "rule_set_182"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_ip_allocations",
              "remarks": "rule_set_183"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /var/lib/cni/networks/openshift-sdn/.*, run the command: $ sudo chown root /var/lib/cni/networks/openshift-sdn/.*",
              "remarks": "rule_set_183"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_ovn_cni_server_sock",
              "remarks": "rule_set_184"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /run/ovn-kubernetes/cni/ovn-cni-server.sock, run the command: $ sudo chmod 0600 /run/ovn-kubernetes/cni/ovn-cni-server.sock",
              "remarks": "rule_set_184"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_ovn_cni_server_sock",
              "remarks": "rule_set_185"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /run/ovn-kubernetes/cni/ovn-cni-server.sock, run the command: $ sudo chgrp root /run/ovn-kubernetes/cni/ovn-cni-server.sock",
              "remarks": "rule_set_185"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_ovn_cni_server_sock",
              "remarks": "rule_set_186"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /run/ovn-kubernetes/cni/ovn-cni-server.sock, run the command: $ sudo chown root /run/ovn-kubernetes/cni/ovn-cni-server.sock",
              "remarks": "rule_set_186"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_ovn_db_files",
              "remarks": "rule_set_187"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /var/lib/ovn/etc/*.db, run the command: $ sudo chgrp root /var/lib/ovn/etc/*.db",
              "remarks": "rule_set_187"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_ovn_db_files",
              "remarks": "rule_set_188"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /var/lib/ovn/etc/*.db, run the command: $ sudo chown root /var/lib/ovn/etc/*.db",
              "remarks": "rule_set_188"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_ovn_db_files",
              "remarks": "rule_set_189"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /var/lib/ovn/etc/*.db, run the command: $ sudo chmod 0640 /var/lib/ovn/etc/*.db",
              "remarks": "rule_set_189"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_oauth_https_serving_cert",
              "remarks": "rule_set_190"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "By default, the OpenShift OAuth API Server uses TLS. HTTPS should be used for connections between openshift-oauth-apiserver and kube-apiserver. By default, the OpenShift OAuth API Server uses Intermediate profile which requires a minimum TLS version of 1.2.",
              "remarks": "rule_set_190"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_permissions_ovs_vswitchd_pid",
              "remarks": "rule_set_191"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the permissions of /run/openvswitch/ovs-vswitchd.pid, run the command: $ sudo chmod 0644 /run/openvswitch/ovs-vswitchd.pid",
              "remarks": "rule_set_191"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "secrets_consider_external_storage",
              "remarks": "rule_set_192"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Consider the use of an external secrets storage and management system, instead of using Kubernetes Secrets directly, if you have more complex secret management needs. Ensure the solution requires authentication to access secrets, has auditing of access to and use of secrets, and encrypts secrets. Some solutions also make it easier to rotate secrets.",
              "remarks": "rule_set_192"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_enable_cert_rotation",
              "remarks": "rule_set_193"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To enable the kubelet to rotate client certificates, edit the kubelet configuration file /etc/kubernetes/kubelet.conf on the kubelet node(s) and set the below parameter: ... rotateCertificates: true ...",
              "remarks": "rule_set_193"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_disable_readonly_port",
              "remarks": "rule_set_194"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To disable the read-only port, edit the kubelet configuration Edit the openshift-kube-apiserver configmap and set the kubelet-read-only-port parameter to 0: \"apiServerArguments\":{ ... \"kubelet-read-only-port\":[ \"0\" ], ...",
              "remarks": "rule_set_194"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "configure_network_policies",
              "remarks": "rule_set_195"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "There are a variety of CNI plugins available for Kubernetes. If the CNI in use does not support Network Policies it may not be possible to effectively restrict traffic in the cluster. OpenShift supports Kubernetes NetworkPolicy using a Kubernetes Container Network Interface (CNI) plug-in.",
              "remarks": "rule_set_195"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_admission_control_plugin_scc",
              "remarks": "rule_set_196"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure pod permissions are managed, make sure that the SecurityContextConstraint admission control plugin is used.",
              "remarks": "rule_set_196"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_etcd_pki_cert_files",
              "remarks": "rule_set_197"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /etc/kubernetes/static-pod-resources/*/*/*/*.crt, run the command: $ sudo chown root /etc/kubernetes/static-pod-resources/*/*/*/*.crt",
              "remarks": "rule_set_197"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_etcd_data_dir",
              "remarks": "rule_set_198"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /var/lib/etcd/member/, run the command: $ sudo chgrp root /var/lib/etcd/member/",
              "remarks": "rule_set_198"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "etcd_auto_tls",
              "remarks": "rule_set_199"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the etcd service is not using self-signed certificates, run the following command: $ oc get cm/etcd-pod -n openshift-etcd -o yaml The etcd pod configuration contained in the configmap should not contain the --auto-tls=true flag.",
              "remarks": "rule_set_199"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_admission_control_plugin_alwayspullimages",
              "remarks": "rule_set_200"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The AlwaysPullImages admission control plugin should be disabled, since it can introduce new failure modes for control plane components if an image registry is unreachable.",
              "remarks": "rule_set_200"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "controller_use_service_account",
              "remarks": "rule_set_201"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure individual service account credentials are used, set the use-service-account-credentials option to true in the openshift-kube-controller-manager configmap on the master node(s): \"extendedArguments\": { ... \"use-service-account-credentials\": [ \"true\" ], ...",
              "remarks": "rule_set_201"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_ovs_sys_id_conf",
              "remarks": "rule_set_202"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Check if the group owner of /etc/openvswitch/system-id.conf is hugetlbfs on architectures other than s390x or openvswitch on x390x.",
              "remarks": "rule_set_202"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_cni_conf",
              "remarks": "rule_set_203"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the group owner of /etc/cni/net.d/*, run the command: $ sudo chgrp root /etc/cni/net.d/*",
              "remarks": "rule_set_203"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "rbac_debug_role_protects_pprof",
              "remarks": "rule_set_204"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Ensure that the cluster-debugger cluster role includes the /debug/pprof resource URL. This demonstrates that profiling is protected by RBAC, with a specific cluster role to allow access.",
              "remarks": "rule_set_204"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "rbac_limit_cluster_admin",
              "remarks": "rule_set_205"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The RBAC role cluster-admin provides wide-ranging powers over the environment and should be used only where and when needed.",
              "remarks": "rule_set_205"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_ovs_pid",
              "remarks": "rule_set_206"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Ensure that the file /var/run/openvswitch/ovs-vswitchd.pid, is owned by the group openvswitch or hugetlbfs, depending on your settings and Open vSwitch version.",
              "remarks": "rule_set_206"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_admission_control_plugin_securitycontextdeny",
              "remarks": "rule_set_207"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Instead of using a customized SecurityContext for pods, a Pod Security Policy (PSP) or a SecurityContextConstraint should be used. These are cluster-level resources that control the actions that a pod can perform and what resource the pod may access. The SecurityContextDeny disallows folks from setting a pod's securityContext fields. Ensure that the list of admission controllers does not include SecurityContextDeny: $ oc -n openshift-kube-apiserver get configmap config -o json | jq -r '.data.\"config.yaml\"' | jq '.apiServerArguments.\"enable-admission-plugins\"'",
              "remarks": "rule_set_207"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_ovs_conf_db_lock",
              "remarks": "rule_set_208"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Check if the group owner of /etc/openvswitch/.conf.db.~lock~ is hugetlbfs on architectures other than s390x or openvswitch on s390x.",
              "remarks": "rule_set_208"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_owner_ovsdb_server_pid",
              "remarks": "rule_set_209"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To properly set the owner of /run/openvswitch/ovsdb-server.pid, run the command: $ sudo chown openvswitch /run/openvswitch/ovsdb-server.pid",
              "remarks": "rule_set_209"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_configure_tls_cipher_suites",
              "remarks": "rule_set_210"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Ensure that the Kubelet is configured to only use strong cryptographic ciphers. To set the cipher suites for the kubelet, create new or modify existing KubeletConfig object along these lines, one for every MachineConfigPool: apiVersion: machineconfiguration.openshift.io/v1 kind: KubeletConfig metadata: name: kubelet-config-$pool spec: machineConfigPoolSelector: matchLabels: pools.operator.machineconfiguration.openshift.io/$pool_name: \"\" kubeletConfig: tlsCipherSuites: - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 In order to configure this rule to check for an alternative cipher, both var_kubelet_tls_cipher_suites_regex and var_kubelet_tls_cipher_suites have to be set",
              "remarks": "rule_set_210"
            },
            {
              "name": "Parameter_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "var_kubelet_tls_cipher_suites_regex",
              "remarks": "rule_set_210"
            },
            {
              "name": "Parameter_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Cryptographic Ciphers Available for Kubelet",
              "remarks": "rule_set_210"
            },
            {
              "name": "Parameter_Value_Alternatives",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "{'default': '^(TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384|TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384|TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256|TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256|TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256|TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256)$'}",
              "remarks": "rule_set_210"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "scc_limit_network_namespace",
              "remarks": "rule_set_211"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Containers should not be allowed access to the host's network namespace. To prevent containers from getting access to a host's network namespace, the appropriate Security Context Constraints (SCCs) should set allowHostNetwork to false.",
              "remarks": "rule_set_211"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_groupowner_ovs_conf_db",
              "remarks": "rule_set_212"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Check if the group owner of /etc/openvswitch/conf.db is hugetlbfs on architectures other than s390x or openvswitch on s390x.",
              "remarks": "rule_set_212"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "reject_unsigned_images_by_default",
              "remarks": "rule_set_213"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The OpenShift Platform allows for verifying the signature of a container image before pulling it. this is done via the policy.json file [1] which needs to be configured via the Machine Config Operator [2]. Ensure that the default policy is \"reject\" in /etc/containers/policy.json, which should look as follows: { \"default\": [{\"type\": \"reject\"}], \"transports\": ... } Addition of allowed registries must be an explicit action to ensure that only containers from allowed registries are used. [1] https://github.com/containers/image/blob/main/docs/containers-policy.json.5.md [2] https://docs.openshift.com/container-platform/latest/security/container_security/security-container-signature.html",
              "remarks": "rule_set_213"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "ocp_allowed_registries_for_import",
              "remarks": "rule_set_214"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The configuration allowedRegistriesForImport limits the container image registries from which normal users may import images. This is important to control, as a user who can stand up a malicious registry can then import content which claims to include the SHAs of legitimate content layers. You can set the allowed repositories for import by applying the following manifest using oc patch, e.g. if you save the following snippet to /tmp/allowed-import-registries-patch.yaml spec: allowedRegistriesForImport: - domainName: my-trusted-registry.internal.example.com insecure: false you would call oc patch image.config.openshift.io cluster --patch=\"$(cat /tmp/allowed-import-registries-patch.yaml)\" --type=merge",
              "remarks": "rule_set_214"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "ocp_allowed_registries",
              "remarks": "rule_set_215"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The configuration registrySources.allowedRegistries determines the permitted registries that the OpenShift container runtime can access for builds and pods. This configuration setting ensures that all registries other than those specified are blocked. You can set the allowed repositories by applying the following manifest using oc patch, e.g. if you save the following snippet to /tmp/allowed-registries-patch.yaml spec: registrySources: allowedRegistries: - my-trusted-registry.internal.example.com you would call oc patch image.config.openshift.io cluster --patch=\"$(cat /tmp/allowed-registries-patch.yaml)\" --type=merge",
              "remarks": "rule_set_215"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "ocp_no_ldap_insecure",
              "remarks": "rule_set_216"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "For users to interact with OpenShift Container Platform, they must first authenticate to the cluster. The authentication layer identifies the user associated with requests to the OpenShift Container Platform API. The authorization layer then uses information about the requesting user to determine if the request is allowed. Understanding authentication | Authentication | OpenShift Container Platform The OpenShift Container Platform includes a built-in OAuth server for token-based authentication. Developers and administrators obtain OAuth access tokens to authenticate themselves to the API. It is recommended for an administrator to configure OAuth to specify an identity provider after the cluster is installed. User access to the cluster is managed through the identity provider. Understanding identity provider configuration | Authentication | OpenShift Container Platform If the identity provider is LDAP, setting the insecure flag to true would mean that passwords, such as the one used to authenticate the OAuth proxy to the LDAP server would be transmitted in the clear, potentially allowing an attacker to read the password if they captured the network traffic.",
              "remarks": "rule_set_216"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "routes_rate_limit",
              "remarks": "rule_set_217"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "OpenShift has an option to set the rate limit for Routes [1] when creating new Routes. All routes outside the openshift namespaces and the kube namespaces should use the rate-limiting annotations. [1] https://docs.openshift.com/container-platform/4.9/networking/routes/route-configuration.html#nw-route-specific-annotations_route-configuration",
              "remarks": "rule_set_217"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "resource_requests_quota",
              "remarks": "rule_set_218"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "There are two ways to enable resource requests and limits. To create either: A multi-project quota, defined by a ClusterResourceQuota object, allows quotas to be shared across multiple projects. Resources used in each selected project are aggregated and that aggregate is used to limit resources across all the selected projects. A resource quota, defined by a ResourceQuota object, provides constraints that limit aggregate resource consumption per project. It can limit the quantity of objects that can be created in a project by type, as well as the total amount of compute resources and storage that might be consumed by resources in that project. We want to make sure either a ClusterResourceQuota is used in a cluster or a ResourceQuota is used per namespaces. To configure ClusterResourceQuota, follow the directions in the documentation To configure ResourceQuota Per Project, follow the directions in the documentation",
              "remarks": "rule_set_218"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "route_ip_whitelist",
              "remarks": "rule_set_219"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "OpenShift has an option to set the IP whitelist for Routes [1] when creating new Routes. All routes outside the openshift namespaces and the kube namespaces should use the IP whitelist annotations. Requests from IP addresses that are not in the whitelist are dropped. [1] https://docs.openshift.com/container-platform/latest/networking/routes/route-configuration.html#nw-route-specific-annotations_route-configuration",
              "remarks": "rule_set_219"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "cluster_wide_proxy_set",
              "remarks": "rule_set_220"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Production environments can deny direct access to the Internet and instead have an HTTP or HTTPS proxy available. The Proxy object is used to manage the cluster-wide egress proxy. Setting this will ensure that containers get the appropriate environment variables set to ensure traffic goes to the proxy per organizational requirements. For more information, see the relevant documentation.",
              "remarks": "rule_set_220"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "etcd_peer_key_file",
              "remarks": "rule_set_221"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the etcd service is serving TLS to peers, make sure the etcd-pod* ConfigMaps in the openshift-etcd namespace contain the following argument for the etcd binary in the etcd pod: oc get -nopenshift-etcd cm etcd-pod -oyaml | grep \"\\-\\-peer-key-file=/etc/kubernetes/static-pod-certs/secrets/etcd-all-[a-z]+/etcd-peer-NODE_NAME.key\" Note that the [a-z]+ is being used since the directory might change between OpenShift versions.",
              "remarks": "rule_set_221"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_tls_private_key",
              "remarks": "rule_set_222"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the API Server utilizes its own TLS certificates, the tls-private-key-file must be configured. Verify that the apiServerArguments section has the tls-private-key-file configured in the config configmap in the openshift-kube-apiserver namespace similar to: \"apiServerArguments\":{ ... \"tls-private-key-file\": [ \"/etc/kubernetes/static-pod-certs/secrets/service-network-serving-certkey/tls.key\" ], ... }",
              "remarks": "rule_set_222"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_etcd_ca",
              "remarks": "rule_set_223"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure etcd is configured to make use of TLS encryption for client connections, follow the OpenShift documentation and setup the TLS connection between the API Server and etcd. Then, verify that apiServerArguments has the etcd-cafile configured in the openshift-kube-apiserver config configmap to something similar to: \"apiServerArguments\": { ... \"etcd-cafile\": [ \"/etc/kubernetes/static-pod-resources/configmaps/etcd-serving-ca/ca-bundle.crt\" ], ...",
              "remarks": "rule_set_223"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_client_ca",
              "remarks": "rule_set_224"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Certificates must be provided to fully setup TLS client certificate authentication. To ensure the API Server utilizes its own TLS certificates, the clientCA must be configured. Verify that servingInfo has the clientCA configured in the openshift-kube-apiserver config configmap to something similar to: \"apiServerArguments\": { ... \"client-ca-file\": [ \"/etc/kubernetes/static-pod-certs/configmaps/client-ca/ca-bundle.crt\" ], ...",
              "remarks": "rule_set_224"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_tls_cert",
              "remarks": "rule_set_225"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the API Server utilizes its own TLS certificates, the tls-cert-file must be configured. Verify that the apiServerArguments section has the tls-cert-file configured in the config configmap in the openshift-kube-apiserver namespace similar to: \"apiServerArguments\":{ ... \"tls-cert-file\": [ \"/etc/kubernetes/static-pod-certs/secrets/service-network-serving-certkey/tls.crt\" ], ... }",
              "remarks": "rule_set_225"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_configure_tls_key",
              "remarks": "rule_set_226"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the kubelet TLS private server key certificate is configured, edit the kubelet configuration file /etc/kubernetes/kubelet.conf and configure the kubelet private key file. tlsPrivateKeyFile: /path/to/TLS/private.key",
              "remarks": "rule_set_226"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "etcd_peer_cert_file",
              "remarks": "rule_set_227"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the etcd service is serving TLS to peers, make sure the etcd-pod* ConfigMaps in the openshift-etcd namespace contain the following argument for the etcd binary in the etcd pod: --peer-cert-file=/etc/kubernetes/static-pod-certs/secrets/etcd-all-[a-z]+/etcd-peer-NODE_NAME.crt Note that the [a-z]+ is being used since the directory might change between OpenShift versions.",
              "remarks": "rule_set_227"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_configure_tls_cert",
              "remarks": "rule_set_228"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the kubelet TLS client certificate is configured, edit the kubelet configuration file /etc/kubernetes/kubelet.conf and configure the kubelet certificate file. tlsCertFile: /path/to/TLS/cert.key",
              "remarks": "rule_set_228"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_configure_tls_cert_pre_4_9",
              "remarks": "rule_set_229"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "To ensure the kubelet TLS client certificate is configured, edit the kubelet configuration file /etc/kubernetes/kubelet.conf and configure the kubelet certificate file. tlsCertFile: /path/to/TLS/cert.key Note that this particular rule is only valid for OCP releases up to and including 4.8",
              "remarks": "rule_set_229"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_tls_security_profile",
              "remarks": "rule_set_230"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The configuration tlsSecurityProfile specifies TLS configurations to be used while establishing connections with the externally exposed servers. Though secure transport mode is used for establishing connections, the protocols used may not always be strong enough to avoid interception and manipulation of the data in transport. TLS Security profile configured should not make use of any protocols, ciphers, and algorithms with known security vulnerabilities. tlsSecurityProfile can be configured to use one of custom, intermediate, modern, or old profile. Profile Old should be avoided at all times and when using custom profile one should be extremely careful as invalid configurations can be catastrophic. It is always advised to use highly secure intermediate or modern profiles and if unset a default is chosen. Update tlsSecurityProfile to Intermediate using the following command: oc patch apiservers.config.openshift.io cluster --type 'json' --patch '[{\"op\": \"add\", \"path\": \"/spec/tlsSecurityProfile/intermediate\", \"value\": {}}, {\"op\": \"replace\", \"path\": \"/spec/tlsSecurityProfile/type\", \"value\": \"Intermediate\"}' For more information, follow OpenShift documentation: the relevant documentation.",
              "remarks": "rule_set_230"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "ingress_controller_tls_security_profile",
              "remarks": "rule_set_231"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The configuration tlsSecurityProfile specifies TLS configurations to be used while establishing connections with the externally exposed servers. Though secure transport mode is used for establishing connections, the protocols used may not always be strong enough to avoid interception and manipulation of the data in transport. TLS Security profile configured should not make use of any protocols, ciphers, and algorithms with known security vulnerabilities. tlsSecurityProfile can be configured to use one of custom, intermediate, modern, or old profile. Profile Old should be avoided at all times and when using custom profile one should be extremely careful as invalid configurations can be catastrophic. It is always advised to use highly secure intermediate or modern profiles and if unset profile configured in apiservers.config.openshift.io/cluster resource will be used as default. To update tlsSecurityProfile to Intermediate use the following command: oc patch -n openshift-ingress-operator ingresscontrollers.operator.openshift.io default --type 'json' --patch '[{\"op\": \"add\", \"path\": \"/spec/tlsSecurityProfile/intermediate\", \"value\": {}}, {\"op\": \"replace\", \"path\": \"/spec/tlsSecurityProfile/type\", \"value\": \"Intermediate\"}' For more information, follow OpenShift documentation: the relevant documentation.",
              "remarks": "rule_set_231"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "kubelet_configure_tls_min_version",
              "remarks": "rule_set_232"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The configuration tlsSecurityProfile specifies TLS configurations to be used while establishing connections with the externally exposed servers. Though secure transport mode is used for establishing connections, the protocols used may not always be strong enough to avoid interception and manipulation of the data in transport. TLS Security profile configured should not make use of any protocols, ciphers, and algorithms with known security vulnerabilities. tlsSecurityProfile can be configured to use one of custom, intermediate, modern, or old profile. Profile Old should be avoided at all times and when using custom profile one should be extremely careful as invalid configurations can be catastrophic. It is always advised to configure minimum TLS version to TLSv1.2 or latest when using Custom profile or to use predefined profiles Intermediate or modern. If a TLS security profile is not configured, the default TLS security profile is Intermediate. To configure Custom tlsSecurityProfile for the Kubelet with TLSv1.2 as minimum TLS version, create a new or modify existing KubeletConfig object along these lines, one for every MachineConfigPool: apiVersion: machineconfiguration.openshift.io/v1 kind: KubeletConfig metadata: name: kubelet-tls-config-$pool spec: tlsSecurityProfile: type: Custom custom: ciphers: - ECDHE-ECDSA-CHACHA20-POLY1305 - ECDHE-RSA-CHACHA20-POLY1305 - ECDHE-RSA-AES128-GCM-SHA256 - ECDHE-ECDSA-AES128-GCM-SHA256 minTLSVersion: machineConfigPoolSelector: matchLabels: pools.operator.machineconfiguration.openshift.io/$pool_name: \"\" In order to configure this rule to check for an alternate TLS version, both var_kubelet_tls_min_version_regex and var_kubelet_tls_min_version should be updated. For more information, follow OpenShift documentation: the relevant documentation.",
              "remarks": "rule_set_232"
            },
            {
              "name": "Parameter_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "var_kubelet_tls_min_version_regex",
              "remarks": "rule_set_232"
            },
            {
              "name": "Parameter_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "TLS versions available for configuring Kubelet, excluding insecure versions",
              "remarks": "rule_set_232"
            },
            {
              "name": "Parameter_Value_Alternatives",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "{'default': '^(?!VersionTLS10|VersionTLS11)'}",
              "remarks": "rule_set_232"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "ingress_controller_certificate",
              "remarks": "rule_set_233"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Check that the default Ingress certificate has been replaced.",
              "remarks": "rule_set_233"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "default_ingress_ca_replaced",
              "remarks": "rule_set_234"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "Check that the default Ingress CA has been replaced.",
              "remarks": "rule_set_234"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "api_server_encryption_provider_cipher",
              "remarks": "rule_set_235"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "When you enable etcd encryption, the following OpenShift API server and Kubernetes API server resources are encrypted: Secrets ConfigMaps Routes OAuth access tokens OAuth authorize tokens When you enable etcd encryption, encryption keys are created. These keys are rotated on a weekly basis. You must have these keys in order to restore from an etcd backup. To ensure the correct cipher, set the encryption type to aescbc or aesgcm in the apiserver object which configures the API server itself. spec: encryption: type: aescbc For more information, follow the relevant documentation.",
              "remarks": "rule_set_235"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "file_integrity_notification_enabled",
              "remarks": "rule_set_236"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The OpenShift platform provides the File Integrity Operator to monitor for unwanted file changes, and this control ensures proper notification alert is enabled so that system administrators and security personnel are notified about the alerts",
              "remarks": "rule_set_236"
            },
            {
              "name": "Rule_Id",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "compliance_notification_enabled",
              "remarks": "rule_set_237"
            },
            {
              "name": "Rule_Description",
              "ns": "https://ibm.github.io/compliance-trestle/schemas/oscal/cd",
              "value": "The OpenShift platform provides the Compliance Operator for administrators to monitor compliance state of a cluster and provides them with an overview of gaps and ways to remediate them, and this control ensures proper notification alert is enabled for Compliance Operator so that system administrators and security personnel are notified about the alerts on compliance status.",
              "remarks": "rule_set_237"
            }
          ],
          "status": {
            "state": "operational"
          }
        },
        {
          "uuid": "77924fd0-398c-44b8-bb2c-d862025fcd0b",
          "type": "this-system",
          "title": "This System",
          "description": "",
          "status": {
            "state": "operational"
          }
        }
      ]
    },
    "control-implementation": {
      "description": "This is the control implementation for the system.",
      "implemented-requirements": [
        {
          "uuid": "4fd0da5d-68c4-4c55-8ee1-bd44ca7108ab",
          "control-id": "sc-1",
          "by-components": [
            {
              "component-uuid": "77924fd0-398c-44b8-bb2c-d862025fcd0b",
              "uuid": "0881a5de-1a7e-4f6b-aec3-a10d6985e46c",
              "description": "",
              "implementation-status": {
                "state": "planned"
              }
            },
            {
              "component-uuid": "ccc99dad-9d38-4b77-a801-194477e0ed30",
              "uuid": "78356a9b-ce6c-4757-b82b-442bb66b2f6c",
              "description": "This is the responses for sc-1",
              "implementation-status": {
                "state": "planned"
              }
            }
          ]
        },
        {
          "uuid": "60db7c2f-ccab-41f0-8a28-d451e9c4468b",
          "control-id": "ac-2.2",
          "by-components": [
            {
              "component-uuid": "77924fd0-398c-44b8-bb2c-d862025fcd0b",
              "uuid": "4bd28d93-da7e-437a-a82b-21497319eacb",
              "description": "",
              "implementation-status": {
                "state": "planned"
              }
            },
            {
              "component-uuid": "ccc99dad-9d38-4b77-a801-194477e0ed30",
              "uuid": "6b736b9e-8486-44b7-b475-c5f5e5ad381b",
              "description": "My implementation for ac-2.2",
              "implementation-status": {
                "state": "planned"
              }
            }
          ]
        },
        {
          "uuid": "5e0e81b8-0603-436f-9ac9-11d87ad901a1",
          "control-id": "ac-1",
          "statements": [
            {
              "statement-id": "ac-1_smt.a",
              "uuid": "57e060eb-97fd-41fe-ad91-d428cc5bc67c",
              "by-components": [
                {
                  "component-uuid": "a6ce96d1-fa18-47cf-b2af-56c2a14bc71e",
                  "uuid": "b9cd661d-d50b-47ad-a167-237b9861d072",
                  "description": "My example responses for ac-1 part a.",
                  "props": [
                    {
                      "name": "Rule_Id",
                      "ns": "https://oscal-compass.github.io/compliance-trestle/schemas/oscal",
                      "value": "rule-ac-1"
                    }
                  ],
                  "set-parameters": [
                    {
                      "param-id": "prm_1",
                      "values": [
                        "5%"
                      ]
                    }
                  ],
                  "implementation-status": {
                    "state": "planned"
                  }
                },
                {
                  "component-uuid": "976bc5a3-2a2c-4f4a-9006-267b350860cc",
                  "uuid": "e0913021-4424-432b-9e2b-8c71f60cf3c3",
                  "description": "My example responses for ac-1 part a.",
                  "implementation-status": {
                    "state": "partial"
                  }
                },
                {
                  "component-uuid": "ccc99dad-9d38-4b77-a801-194477e0ed30",
                  "uuid": "11ac9e34-e3ea-45f9-a394-4407562357d3",
                  "description": "My example responses for ac-1 part a.",
                  "implementation-status": {
                    "state": "partial"
                  }
                }
              ]
            }
          ],
          "by-components": [
            {
              "component-uuid": "77924fd0-398c-44b8-bb2c-d862025fcd0b",
              "uuid": "283c8925-9dbb-4503-af19-843ed5484437",
              "description": "This system implementation for ac-1.",
              "implementation-status": {
                "state": "planned"
              }
            }
          ]
        },
        {
          "uuid": "4798521a-2880-4045-ba7f-2bd202768e82",
          "control-id": "ac-4.4",
          "by-components": [
            {
              "component-uuid": "77924fd0-398c-44b8-bb2c-d862025fcd0b",
              "uuid": "3b706600-d57b-4ca4-871f-398742414e7f",
              "description": "",
              "implementation-status": {
                "state": "planned"
              }
            },
            {
              "component-uuid": "ccc99dad-9d38-4b77-a801-194477e0ed30",
              "uuid": "eb3f7d43-238f-40bd-9637-bfd694d0ef23",
              "description": "",
              "implementation-status": {
                "state": "planned"
              }
            }
          ]
        },
        {
          "uuid": "84cb9081-2156-4fb6-9c70-e3f2d67c6011",
          "control-id": "ac-2",
          "by-components": [
            {
              "component-uuid": "77924fd0-398c-44b8-bb2c-d862025fcd0b",
              "uuid": "f7784e65-8b80-4d45-bc69-a3d6c5b45b10",
              "description": "",
              "implementation-status": {
                "state": "planned"
              }
            }
          ]
        }
      ]
    }
  }
}